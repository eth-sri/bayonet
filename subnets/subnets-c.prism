dtmc
global unlk:[-1..11] init 0;
global assrtOK:bool init true;
global obsrvOK:bool init true;
const int INTMIN = 0; const int INTMAX = 255;
const int maxNumSteps = 20;
global numSteps:[0..maxNumSteps] init 0;
const int maxNumSkips = 12;
global numSkips:[0..12] init 0;
const int v7SUBSIZE = 6;
module n6Sender
n6Senderv4sent:[INTMIN..INTMAX] init 0;
n6Sendert0:[0..11];
n6Senderip0:[1..2] init 1;n6Senderiv3dst0:[INTMIN..INTMAX] init 0;
n6Senderip1:[1..2] init 1;n6Senderiv3dst1:[INTMIN..INTMAX] init 0;
n6Senderis:[0..2] init 1;
n6Senderop0:[1..2] init 1;n6Senderov3dst0:[INTMIN..INTMAX] init 0;
n6Senderop1:[1..2] init 1;n6Senderov3dst1:[INTMIN..INTMAX] init 0;
n6Senderos:[0..2] init 0;
n6Senderopt:[1..2] init 1;
n6Senderpc:[-6..9] init 0; n6Senderra:[-6..9] init 0;
[] n6Senderis<2 & n6Senderpc=-1 -> (n6Senderip0'=1)&(n6Senderiv3dst0'=0)&(n6Senderip1'=n6Senderip0)&(n6Senderiv3dst1'=n6Senderiv3dst0)&(n6Senderis'=n6Senderis+1)&(n6Senderpc'=n6Senderra);
[] n6Senderis=2 & n6Senderpc=-1 -> (n6Senderpc'=n6Senderra);
[] n6Senderis=0 & n6Senderpc=-2 -> (n6Senderpc'=n6Senderra);
[] n6Senderis>0 & n6Senderis<2 & n6Senderpc=-2 -> (n6Senderip1'=n6Senderip0)&(n6Senderiv3dst1'=n6Senderiv3dst0)&(n6Senderis'=n6Senderis+1)&(n6Senderpc'=n6Senderra);
[] n6Senderis=2 & n6Senderpc=-2 -> (n6Senderpc'=n6Senderra);
[] n6Senderis=0 & n6Senderpc=-3 -> (n6Senderpc'=n6Senderra);
[] n6Senderis>0 & n6Senderpc=-3 -> (n6Senderip0'=n6Senderip1)&(n6Senderiv3dst0'=n6Senderiv3dst1)&(n6Senderis'=n6Senderis-1)&(n6Senderpc'=n6Senderra);
[] n6Senderos=0 & n6Senderpc=-4 -> (n6Senderop0'=n6Senderopt)&(n6Senderov3dst0'=n6Senderiv3dst0)&(n6Senderos'=1)&(n6Senderpc'=-3);
[] n6Senderos=1 & n6Senderpc=-4 -> (n6Senderop1'=n6Senderopt)&(n6Senderov3dst1'=n6Senderiv3dst0)&(n6Senderos'=2)&(n6Senderpc'=-3);
[] n6Senderos=2 & n6Senderpc=-4 -> (n6Senderpc'=-3);
[n2S0f1] n6Senderis=0 -> (n6Senderip0'=1)&(n6Senderiv3dst0'=n2S0ov3dst0)&(n6Senderis'=1);
[n2S0f1] n6Senderis=1 -> (n6Senderip1'=1)&(n6Senderiv3dst1'=n2S0ov3dst0)&(n6Senderis'=2);
[n2S0f1] n6Senderis=2 -> true;
[] unlk=6 & numSteps<maxNumSteps & n6Senderpc=0 & n6Senderos>0 -> (n6Senderpc'=-5)&(unlk'=-1)&(numSkips'=0);
[] unlk=6 & numSteps<maxNumSteps & numSkips<maxNumSkips & n6Senderpc=0 & n6Senderos=0 -> (unlk'=7)&(numSkips'=numSkips+1);
[n6Senderf1] n6Senderpc=-5 & n6Senderos>0 & n6Senderop0=1 -> (n6Senderop0'=n6Senderop1)&(n6Senderov3dst0'=n6Senderov3dst1)&(n6Senderos'=n6Senderos-1)&(n6Senderpc'=-6);
[] numSteps<maxNumSteps & n6Senderpc=-6 -> (n6Senderpc'=0)&(unlk'=7)&(numSteps'=numSteps+1);
[] unlk=0 & numSteps<maxNumSteps & n6Senderpc=0 & n6Senderis>0 -> (n6Senderpc'=1)&(unlk'=-1)&(numSkips'=0);
[] unlk=0 & numSteps<maxNumSteps & numSkips<maxNumSkips & n6Senderpc=0 & n6Senderis=0 -> (unlk'=1)&(numSkips'=numSkips+1);
[] n6Senderpc=1 & (n6Senderv4sent<2) -> (n6Senderpc'=2);
[] n6Senderpc=1 & !((n6Senderv4sent<2)) -> (n6Senderpc'=8);
[] n6Senderpc=2 -> 0.0833333:(n6Sendert0'=0)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=1)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=2)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=3)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=4)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=5)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=6)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=7)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=8)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=9)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=10)&(n6Senderpc'=3) + 0.0833333:(n6Sendert0'=11)&(n6Senderpc'=3);
[] n6Senderpc=3 & n6Sendert0>=INTMIN & n6Sendert0<=INTMAX -> (n6Senderiv3dst0'=n6Sendert0)&(n6Senderpc'=4);
[] n6Senderpc=4 -> (n6Senderopt'=1)&(n6Senderpc'=-4)&(n6Senderra'=5);
[] n6Senderpc=5 & (n6Senderv4sent+1)>=INTMIN & (n6Senderv4sent+1)<=INTMAX -> (n6Senderv4sent'=(n6Senderv4sent+1))&(n6Senderpc'=6);
[] n6Senderpc=6 -> (n6Senderpc'=-1)&(n6Senderra'=7);
[] n6Senderpc=7 -> (n6Senderpc'=9);
[] n6Senderpc=8 -> (n6Senderpc'=-3)&(n6Senderra'=9);
[] numSteps<maxNumSteps & n6Senderpc=9 -> (n6Senderpc'=0)&(unlk'=1)&(numSteps'=numSteps+1);
endmodule
module n3R6B
n3R6Bv5recvd:[INTMIN..INTMAX] init 0;
n3R6Bip0:[1..2] init 1;n3R6Biv3dst0:[INTMIN..INTMAX] init 0;
n3R6Bip1:[1..2] init 1;n3R6Biv3dst1:[INTMIN..INTMAX] init 0;
n3R6Bis:[0..2] init 0;
n3R6Bop0:[1..2] init 1;n3R6Bov3dst0:[INTMIN..INTMAX] init 0;
n3R6Bop1:[1..2] init 1;n3R6Bov3dst1:[INTMIN..INTMAX] init 0;
n3R6Bos:[0..2] init 0;
n3R6Bopt:[1..2] init 1;
n3R6Bpc:[-6..3] init 0; n3R6Bra:[-6..3] init 0;
[] n3R6Bis<2 & n3R6Bpc=-1 -> (n3R6Bip0'=1)&(n3R6Biv3dst0'=0)&(n3R6Bip1'=n3R6Bip0)&(n3R6Biv3dst1'=n3R6Biv3dst0)&(n3R6Bis'=n3R6Bis+1)&(n3R6Bpc'=n3R6Bra);
[] n3R6Bis=2 & n3R6Bpc=-1 -> (n3R6Bpc'=n3R6Bra);
[] n3R6Bis=0 & n3R6Bpc=-2 -> (n3R6Bpc'=n3R6Bra);
[] n3R6Bis>0 & n3R6Bis<2 & n3R6Bpc=-2 -> (n3R6Bip1'=n3R6Bip0)&(n3R6Biv3dst1'=n3R6Biv3dst0)&(n3R6Bis'=n3R6Bis+1)&(n3R6Bpc'=n3R6Bra);
[] n3R6Bis=2 & n3R6Bpc=-2 -> (n3R6Bpc'=n3R6Bra);
[] n3R6Bis=0 & n3R6Bpc=-3 -> (n3R6Bpc'=n3R6Bra);
[] n3R6Bis>0 & n3R6Bpc=-3 -> (n3R6Bip0'=n3R6Bip1)&(n3R6Biv3dst0'=n3R6Biv3dst1)&(n3R6Bis'=n3R6Bis-1)&(n3R6Bpc'=n3R6Bra);
[] n3R6Bos=0 & n3R6Bpc=-4 -> (n3R6Bop0'=n3R6Bopt)&(n3R6Bov3dst0'=n3R6Biv3dst0)&(n3R6Bos'=1)&(n3R6Bpc'=-3);
[] n3R6Bos=1 & n3R6Bpc=-4 -> (n3R6Bop1'=n3R6Bopt)&(n3R6Bov3dst1'=n3R6Biv3dst0)&(n3R6Bos'=2)&(n3R6Bpc'=-3);
[] n3R6Bos=2 & n3R6Bpc=-4 -> (n3R6Bpc'=-3);
[n2S2f2] n3R6Bis=0 -> (n3R6Bip0'=1)&(n3R6Biv3dst0'=n2S2ov3dst0)&(n3R6Bis'=1);
[n2S2f2] n3R6Bis=1 -> (n3R6Bip1'=1)&(n3R6Biv3dst1'=n2S2ov3dst0)&(n3R6Bis'=2);
[n2S2f2] n3R6Bis=2 -> true;
[] unlk=11 & numSteps<maxNumSteps & n3R6Bpc=0 & n3R6Bos>0 -> (n3R6Bpc'=-5)&(unlk'=-1)&(numSkips'=0);
[] unlk=11 & numSteps<maxNumSteps & numSkips<maxNumSkips & n3R6Bpc=0 & n3R6Bos=0 -> (unlk'=0)&(numSkips'=numSkips+1);
[n3R6Bf1] n3R6Bpc=-5 & n3R6Bos>0 & n3R6Bop0=1 -> (n3R6Bop0'=n3R6Bop1)&(n3R6Bov3dst0'=n3R6Bov3dst1)&(n3R6Bos'=n3R6Bos-1)&(n3R6Bpc'=-6);
[] numSteps<maxNumSteps & n3R6Bpc=-6 -> (n3R6Bpc'=0)&(unlk'=0)&(numSteps'=numSteps+1);
[] unlk=5 & numSteps<maxNumSteps & n3R6Bpc=0 & n3R6Bis>0 -> (n3R6Bpc'=1)&(unlk'=-1)&(numSkips'=0);
[] unlk=5 & numSteps<maxNumSteps & numSkips<maxNumSkips & n3R6Bpc=0 & n3R6Bis=0 -> (unlk'=6)&(numSkips'=numSkips+1);
[] n3R6Bpc=1 & (n3R6Bv5recvd+1)>=INTMIN & (n3R6Bv5recvd+1)<=INTMAX -> (n3R6Bv5recvd'=(n3R6Bv5recvd+1))&(n3R6Bpc'=2);
[] n3R6Bpc=2 -> (n3R6Bpc'=-3)&(n3R6Bra'=3);
[] numSteps<maxNumSteps & n3R6Bpc=3 -> (n3R6Bpc'=0)&(unlk'=6)&(numSteps'=numSteps+1);
endmodule
module n3R05
n3R05v5recvd:[INTMIN..INTMAX] init 0;
n3R05ip0:[1..2] init 1;n3R05iv3dst0:[INTMIN..INTMAX] init 0;
n3R05ip1:[1..2] init 1;n3R05iv3dst1:[INTMIN..INTMAX] init 0;
n3R05is:[0..2] init 0;
n3R05op0:[1..2] init 1;n3R05ov3dst0:[INTMIN..INTMAX] init 0;
n3R05op1:[1..2] init 1;n3R05ov3dst1:[INTMIN..INTMAX] init 0;
n3R05os:[0..2] init 0;
n3R05opt:[1..2] init 1;
n3R05pc:[-6..3] init 0; n3R05ra:[-6..3] init 0;
[] n3R05is<2 & n3R05pc=-1 -> (n3R05ip0'=1)&(n3R05iv3dst0'=0)&(n3R05ip1'=n3R05ip0)&(n3R05iv3dst1'=n3R05iv3dst0)&(n3R05is'=n3R05is+1)&(n3R05pc'=n3R05ra);
[] n3R05is=2 & n3R05pc=-1 -> (n3R05pc'=n3R05ra);
[] n3R05is=0 & n3R05pc=-2 -> (n3R05pc'=n3R05ra);
[] n3R05is>0 & n3R05is<2 & n3R05pc=-2 -> (n3R05ip1'=n3R05ip0)&(n3R05iv3dst1'=n3R05iv3dst0)&(n3R05is'=n3R05is+1)&(n3R05pc'=n3R05ra);
[] n3R05is=2 & n3R05pc=-2 -> (n3R05pc'=n3R05ra);
[] n3R05is=0 & n3R05pc=-3 -> (n3R05pc'=n3R05ra);
[] n3R05is>0 & n3R05pc=-3 -> (n3R05ip0'=n3R05ip1)&(n3R05iv3dst0'=n3R05iv3dst1)&(n3R05is'=n3R05is-1)&(n3R05pc'=n3R05ra);
[] n3R05os=0 & n3R05pc=-4 -> (n3R05op0'=n3R05opt)&(n3R05ov3dst0'=n3R05iv3dst0)&(n3R05os'=1)&(n3R05pc'=-3);
[] n3R05os=1 & n3R05pc=-4 -> (n3R05op1'=n3R05opt)&(n3R05ov3dst1'=n3R05iv3dst0)&(n3R05os'=2)&(n3R05pc'=-3);
[] n3R05os=2 & n3R05pc=-4 -> (n3R05pc'=-3);
[n2S1f2] n3R05is=0 -> (n3R05ip0'=1)&(n3R05iv3dst0'=n2S1ov3dst0)&(n3R05is'=1);
[n2S1f2] n3R05is=1 -> (n3R05ip1'=1)&(n3R05iv3dst1'=n2S1ov3dst0)&(n3R05is'=2);
[n2S1f2] n3R05is=2 -> true;
[] unlk=10 & numSteps<maxNumSteps & n3R05pc=0 & n3R05os>0 -> (n3R05pc'=-5)&(unlk'=-1)&(numSkips'=0);
[] unlk=10 & numSteps<maxNumSteps & numSkips<maxNumSkips & n3R05pc=0 & n3R05os=0 -> (unlk'=11)&(numSkips'=numSkips+1);
[n3R05f1] n3R05pc=-5 & n3R05os>0 & n3R05op0=1 -> (n3R05op0'=n3R05op1)&(n3R05ov3dst0'=n3R05ov3dst1)&(n3R05os'=n3R05os-1)&(n3R05pc'=-6);
[] numSteps<maxNumSteps & n3R05pc=-6 -> (n3R05pc'=0)&(unlk'=11)&(numSteps'=numSteps+1);
[] unlk=4 & numSteps<maxNumSteps & n3R05pc=0 & n3R05is>0 -> (n3R05pc'=1)&(unlk'=-1)&(numSkips'=0);
[] unlk=4 & numSteps<maxNumSteps & numSkips<maxNumSkips & n3R05pc=0 & n3R05is=0 -> (unlk'=5)&(numSkips'=numSkips+1);
[] n3R05pc=1 & (n3R05v5recvd+1)>=INTMIN & (n3R05v5recvd+1)<=INTMAX -> (n3R05v5recvd'=(n3R05v5recvd+1))&(n3R05pc'=2);
[] n3R05pc=2 -> (n3R05pc'=-3)&(n3R05ra'=3);
[] numSteps<maxNumSteps & n3R05pc=3 -> (n3R05pc'=0)&(unlk'=5)&(numSteps'=numSteps+1);
endmodule
module n2S2
n2S2ip0:[1..2] init 1;n2S2iv3dst0:[INTMIN..INTMAX] init 0;
n2S2ip1:[1..2] init 1;n2S2iv3dst1:[INTMIN..INTMAX] init 0;
n2S2is:[0..2] init 0;
n2S2op0:[1..2] init 1;n2S2ov3dst0:[INTMIN..INTMAX] init 0;
n2S2op1:[1..2] init 1;n2S2ov3dst1:[INTMIN..INTMAX] init 0;
n2S2os:[0..2] init 0;
n2S2opt:[1..2] init 1;
n2S2pc:[-6..2] init 0; n2S2ra:[-6..2] init 0;
[] n2S2is<2 & n2S2pc=-1 -> (n2S2ip0'=1)&(n2S2iv3dst0'=0)&(n2S2ip1'=n2S2ip0)&(n2S2iv3dst1'=n2S2iv3dst0)&(n2S2is'=n2S2is+1)&(n2S2pc'=n2S2ra);
[] n2S2is=2 & n2S2pc=-1 -> (n2S2pc'=n2S2ra);
[] n2S2is=0 & n2S2pc=-2 -> (n2S2pc'=n2S2ra);
[] n2S2is>0 & n2S2is<2 & n2S2pc=-2 -> (n2S2ip1'=n2S2ip0)&(n2S2iv3dst1'=n2S2iv3dst0)&(n2S2is'=n2S2is+1)&(n2S2pc'=n2S2ra);
[] n2S2is=2 & n2S2pc=-2 -> (n2S2pc'=n2S2ra);
[] n2S2is=0 & n2S2pc=-3 -> (n2S2pc'=n2S2ra);
[] n2S2is>0 & n2S2pc=-3 -> (n2S2ip0'=n2S2ip1)&(n2S2iv3dst0'=n2S2iv3dst1)&(n2S2is'=n2S2is-1)&(n2S2pc'=n2S2ra);
[] n2S2os=0 & n2S2pc=-4 -> (n2S2op0'=n2S2opt)&(n2S2ov3dst0'=n2S2iv3dst0)&(n2S2os'=1)&(n2S2pc'=-3);
[] n2S2os=1 & n2S2pc=-4 -> (n2S2op1'=n2S2opt)&(n2S2ov3dst1'=n2S2iv3dst0)&(n2S2os'=2)&(n2S2pc'=-3);
[] n2S2os=2 & n2S2pc=-4 -> (n2S2pc'=-3);
[n3R6Bf1] n2S2is=0 -> (n2S2ip0'=2)&(n2S2iv3dst0'=n3R6Bov3dst0)&(n2S2is'=1);
[n3R6Bf1] n2S2is=1 -> (n2S2ip1'=2)&(n2S2iv3dst1'=n3R6Bov3dst0)&(n2S2is'=2);
[n3R6Bf1] n2S2is=2 -> true;
[n2S0f3] n2S2is=0 -> (n2S2ip0'=1)&(n2S2iv3dst0'=n2S0ov3dst0)&(n2S2is'=1);
[n2S0f3] n2S2is=1 -> (n2S2ip1'=1)&(n2S2iv3dst1'=n2S0ov3dst0)&(n2S2is'=2);
[n2S0f3] n2S2is=2 -> true;
[] unlk=9 & numSteps<maxNumSteps & n2S2pc=0 & n2S2os>0 -> (n2S2pc'=-5)&(unlk'=-1)&(numSkips'=0);
[] unlk=9 & numSteps<maxNumSteps & numSkips<maxNumSkips & n2S2pc=0 & n2S2os=0 -> (unlk'=10)&(numSkips'=numSkips+1);
[n2S2f2] n2S2pc=-5 & n2S2os>0 & n2S2op0=2 -> (n2S2op0'=n2S2op1)&(n2S2ov3dst0'=n2S2ov3dst1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[n2S2f1] n2S2pc=-5 & n2S2os>0 & n2S2op0=1 -> (n2S2op0'=n2S2op1)&(n2S2ov3dst0'=n2S2ov3dst1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[] numSteps<maxNumSteps & n2S2pc=-6 -> (n2S2pc'=0)&(unlk'=10)&(numSteps'=numSteps+1);
[] unlk=3 & numSteps<maxNumSteps & n2S2pc=0 & n2S2is>0 -> (n2S2pc'=1)&(unlk'=-1)&(numSkips'=0);
[] unlk=3 & numSteps<maxNumSteps & numSkips<maxNumSkips & n2S2pc=0 & n2S2is=0 -> (unlk'=4)&(numSkips'=numSkips+1);
[] n2S2pc=1 -> (n2S2opt'=2)&(n2S2pc'=-4)&(n2S2ra'=2);
[] numSteps<maxNumSteps & n2S2pc=2 -> (n2S2pc'=0)&(unlk'=4)&(numSteps'=numSteps+1);
endmodule
module n2S1
n2S1ip0:[1..2] init 1;n2S1iv3dst0:[INTMIN..INTMAX] init 0;
n2S1ip1:[1..2] init 1;n2S1iv3dst1:[INTMIN..INTMAX] init 0;
n2S1is:[0..2] init 0;
n2S1op0:[1..2] init 1;n2S1ov3dst0:[INTMIN..INTMAX] init 0;
n2S1op1:[1..2] init 1;n2S1ov3dst1:[INTMIN..INTMAX] init 0;
n2S1os:[0..2] init 0;
n2S1opt:[1..2] init 1;
n2S1pc:[-6..2] init 0; n2S1ra:[-6..2] init 0;
[] n2S1is<2 & n2S1pc=-1 -> (n2S1ip0'=1)&(n2S1iv3dst0'=0)&(n2S1ip1'=n2S1ip0)&(n2S1iv3dst1'=n2S1iv3dst0)&(n2S1is'=n2S1is+1)&(n2S1pc'=n2S1ra);
[] n2S1is=2 & n2S1pc=-1 -> (n2S1pc'=n2S1ra);
[] n2S1is=0 & n2S1pc=-2 -> (n2S1pc'=n2S1ra);
[] n2S1is>0 & n2S1is<2 & n2S1pc=-2 -> (n2S1ip1'=n2S1ip0)&(n2S1iv3dst1'=n2S1iv3dst0)&(n2S1is'=n2S1is+1)&(n2S1pc'=n2S1ra);
[] n2S1is=2 & n2S1pc=-2 -> (n2S1pc'=n2S1ra);
[] n2S1is=0 & n2S1pc=-3 -> (n2S1pc'=n2S1ra);
[] n2S1is>0 & n2S1pc=-3 -> (n2S1ip0'=n2S1ip1)&(n2S1iv3dst0'=n2S1iv3dst1)&(n2S1is'=n2S1is-1)&(n2S1pc'=n2S1ra);
[] n2S1os=0 & n2S1pc=-4 -> (n2S1op0'=n2S1opt)&(n2S1ov3dst0'=n2S1iv3dst0)&(n2S1os'=1)&(n2S1pc'=-3);
[] n2S1os=1 & n2S1pc=-4 -> (n2S1op1'=n2S1opt)&(n2S1ov3dst1'=n2S1iv3dst0)&(n2S1os'=2)&(n2S1pc'=-3);
[] n2S1os=2 & n2S1pc=-4 -> (n2S1pc'=-3);
[n3R05f1] n2S1is=0 -> (n2S1ip0'=2)&(n2S1iv3dst0'=n3R05ov3dst0)&(n2S1is'=1);
[n3R05f1] n2S1is=1 -> (n2S1ip1'=2)&(n2S1iv3dst1'=n3R05ov3dst0)&(n2S1is'=2);
[n3R05f1] n2S1is=2 -> true;
[n2S0f2] n2S1is=0 -> (n2S1ip0'=1)&(n2S1iv3dst0'=n2S0ov3dst0)&(n2S1is'=1);
[n2S0f2] n2S1is=1 -> (n2S1ip1'=1)&(n2S1iv3dst1'=n2S0ov3dst0)&(n2S1is'=2);
[n2S0f2] n2S1is=2 -> true;
[] unlk=8 & numSteps<maxNumSteps & n2S1pc=0 & n2S1os>0 -> (n2S1pc'=-5)&(unlk'=-1)&(numSkips'=0);
[] unlk=8 & numSteps<maxNumSteps & numSkips<maxNumSkips & n2S1pc=0 & n2S1os=0 -> (unlk'=9)&(numSkips'=numSkips+1);
[n2S1f2] n2S1pc=-5 & n2S1os>0 & n2S1op0=2 -> (n2S1op0'=n2S1op1)&(n2S1ov3dst0'=n2S1ov3dst1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[n2S1f1] n2S1pc=-5 & n2S1os>0 & n2S1op0=1 -> (n2S1op0'=n2S1op1)&(n2S1ov3dst0'=n2S1ov3dst1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[] numSteps<maxNumSteps & n2S1pc=-6 -> (n2S1pc'=0)&(unlk'=9)&(numSteps'=numSteps+1);
[] unlk=2 & numSteps<maxNumSteps & n2S1pc=0 & n2S1is>0 -> (n2S1pc'=1)&(unlk'=-1)&(numSkips'=0);
[] unlk=2 & numSteps<maxNumSteps & numSkips<maxNumSkips & n2S1pc=0 & n2S1is=0 -> (unlk'=3)&(numSkips'=numSkips+1);
[] n2S1pc=1 -> (n2S1opt'=2)&(n2S1pc'=-4)&(n2S1ra'=2);
[] numSteps<maxNumSteps & n2S1pc=2 -> (n2S1pc'=0)&(unlk'=3)&(numSteps'=numSteps+1);
endmodule
module n2S0
n2S0ip0:[1..3] init 1;n2S0iv3dst0:[INTMIN..INTMAX] init 0;
n2S0ip1:[1..3] init 1;n2S0iv3dst1:[INTMIN..INTMAX] init 0;
n2S0is:[0..2] init 0;
n2S0op0:[1..3] init 1;n2S0ov3dst0:[INTMIN..INTMAX] init 0;
n2S0op1:[1..3] init 1;n2S0ov3dst1:[INTMIN..INTMAX] init 0;
n2S0os:[0..2] init 0;
n2S0opt:[1..3] init 1;
n2S0pc:[-6..5] init 0; n2S0ra:[-6..5] init 0;
[] n2S0is<2 & n2S0pc=-1 -> (n2S0ip0'=1)&(n2S0iv3dst0'=0)&(n2S0ip1'=n2S0ip0)&(n2S0iv3dst1'=n2S0iv3dst0)&(n2S0is'=n2S0is+1)&(n2S0pc'=n2S0ra);
[] n2S0is=2 & n2S0pc=-1 -> (n2S0pc'=n2S0ra);
[] n2S0is=0 & n2S0pc=-2 -> (n2S0pc'=n2S0ra);
[] n2S0is>0 & n2S0is<2 & n2S0pc=-2 -> (n2S0ip1'=n2S0ip0)&(n2S0iv3dst1'=n2S0iv3dst0)&(n2S0is'=n2S0is+1)&(n2S0pc'=n2S0ra);
[] n2S0is=2 & n2S0pc=-2 -> (n2S0pc'=n2S0ra);
[] n2S0is=0 & n2S0pc=-3 -> (n2S0pc'=n2S0ra);
[] n2S0is>0 & n2S0pc=-3 -> (n2S0ip0'=n2S0ip1)&(n2S0iv3dst0'=n2S0iv3dst1)&(n2S0is'=n2S0is-1)&(n2S0pc'=n2S0ra);
[] n2S0os=0 & n2S0pc=-4 -> (n2S0op0'=n2S0opt)&(n2S0ov3dst0'=n2S0iv3dst0)&(n2S0os'=1)&(n2S0pc'=-3);
[] n2S0os=1 & n2S0pc=-4 -> (n2S0op1'=n2S0opt)&(n2S0ov3dst1'=n2S0iv3dst0)&(n2S0os'=2)&(n2S0pc'=-3);
[] n2S0os=2 & n2S0pc=-4 -> (n2S0pc'=-3);
[n2S2f1] n2S0is=0 -> (n2S0ip0'=3)&(n2S0iv3dst0'=n2S2ov3dst0)&(n2S0is'=1);
[n2S2f1] n2S0is=1 -> (n2S0ip1'=3)&(n2S0iv3dst1'=n2S2ov3dst0)&(n2S0is'=2);
[n2S2f1] n2S0is=2 -> true;
[n2S1f1] n2S0is=0 -> (n2S0ip0'=2)&(n2S0iv3dst0'=n2S1ov3dst0)&(n2S0is'=1);
[n2S1f1] n2S0is=1 -> (n2S0ip1'=2)&(n2S0iv3dst1'=n2S1ov3dst0)&(n2S0is'=2);
[n2S1f1] n2S0is=2 -> true;
[n6Senderf1] n2S0is=0 -> (n2S0ip0'=1)&(n2S0iv3dst0'=n6Senderov3dst0)&(n2S0is'=1);
[n6Senderf1] n2S0is=1 -> (n2S0ip1'=1)&(n2S0iv3dst1'=n6Senderov3dst0)&(n2S0is'=2);
[n6Senderf1] n2S0is=2 -> true;
[] unlk=7 & numSteps<maxNumSteps & n2S0pc=0 & n2S0os>0 -> (n2S0pc'=-5)&(unlk'=-1)&(numSkips'=0);
[] unlk=7 & numSteps<maxNumSteps & numSkips<maxNumSkips & n2S0pc=0 & n2S0os=0 -> (unlk'=8)&(numSkips'=numSkips+1);
[n2S0f3] n2S0pc=-5 & n2S0os>0 & n2S0op0=3 -> (n2S0op0'=n2S0op1)&(n2S0ov3dst0'=n2S0ov3dst1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f2] n2S0pc=-5 & n2S0os>0 & n2S0op0=2 -> (n2S0op0'=n2S0op1)&(n2S0ov3dst0'=n2S0ov3dst1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f1] n2S0pc=-5 & n2S0os>0 & n2S0op0=1 -> (n2S0op0'=n2S0op1)&(n2S0ov3dst0'=n2S0ov3dst1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[] numSteps<maxNumSteps & n2S0pc=-6 -> (n2S0pc'=0)&(unlk'=8)&(numSteps'=numSteps+1);
[] unlk=1 & numSteps<maxNumSteps & n2S0pc=0 & n2S0is>0 -> (n2S0pc'=1)&(unlk'=-1)&(numSkips'=0);
[] unlk=1 & numSteps<maxNumSteps & numSkips<maxNumSkips & n2S0pc=0 & n2S0is=0 -> (unlk'=2)&(numSkips'=numSkips+1);
[] n2S0pc=1 & (n2S0iv3dst0<v7SUBSIZE) -> (n2S0pc'=2);
[] n2S0pc=1 & !((n2S0iv3dst0<v7SUBSIZE)) -> (n2S0pc'=4);
[] n2S0pc=2 -> (n2S0opt'=2)&(n2S0pc'=-4)&(n2S0ra'=3);
[] n2S0pc=3 -> (n2S0pc'=5);
[] n2S0pc=4 -> (n2S0opt'=3)&(n2S0pc'=-4)&(n2S0ra'=5);
[] numSteps<maxNumSteps & n2S0pc=5 -> (n2S0pc'=0)&(unlk'=2)&(numSteps'=numSteps+1);
endmodule
module finisher
finished:bool init false;
[] !finished & assrtOK & numSkips=maxNumSkips & n6Senderis=0 & n6Senderos=0 & n2S0is=0 & n2S0os=0 & n2S1is=0 & n2S1os=0 & n2S2is=0 & n2S2os=0 & n3R05is=0 & n3R05os=0 & n3R6Bis=0 & n3R6Bos=0 -> (finished'=true);
endmodule

//Properties

//  P=? [ F finished & assrtOK & obsrvOK & ((n3R05v5recvd+n3R6Bv5recvd)=2) ] / P=? [ F finished & obsrvOK ]
