mdp
global unlk:bool init true;
global assrtOK:bool init true;
global obsrvOK:bool init true;
const int INTMIN = 0; const int INTMAX = 255;
const int maxNumSteps = 50;
global numSteps:[0..maxNumSteps] init 0;
module n2H0
n2H0ip0:[1..2] init 1;
n2H0ip1:[1..2] init 1;
n2H0is:[0..2] init 1;
n2H0op0:[1..2] init 1;
n2H0op1:[1..2] init 1;
n2H0os:[0..2] init 0;
n2H0opt:[1..2] init 1;
n2H0pc:[-6..2] init 0; n2H0ra:[-6..2] init 0;
[] n2H0is<2 & n2H0pc=-1 -> (n2H0ip0'=1)&(n2H0ip1'=n2H0ip0)&(n2H0is'=n2H0is+1)&(n2H0pc'=n2H0ra);
[] n2H0is=2 & n2H0pc=-1 -> (n2H0pc'=n2H0ra);
[] n2H0is=0 & n2H0pc=-2 -> (n2H0pc'=n2H0ra);
[] n2H0is>0 & n2H0is<2 & n2H0pc=-2 -> (n2H0ip1'=n2H0ip0)&(n2H0is'=n2H0is+1)&(n2H0pc'=n2H0ra);
[] n2H0is=2 & n2H0pc=-2 -> (n2H0pc'=n2H0ra);
[] n2H0is=0 & n2H0pc=-3 -> (n2H0pc'=n2H0ra);
[] n2H0is>0 & n2H0pc=-3 -> (n2H0ip0'=n2H0ip1)&(n2H0is'=n2H0is-1)&(n2H0pc'=n2H0ra);
[] n2H0os=0 & n2H0pc=-4 -> (n2H0op0'=n2H0opt)&(n2H0os'=1)&(n2H0pc'=-3);
[] n2H0os=1 & n2H0pc=-4 -> (n2H0op1'=n2H0opt)&(n2H0os'=2)&(n2H0pc'=-3);
[] n2H0os=2 & n2H0pc=-4 -> (n2H0pc'=-3);
[n2S0f1] n2H0is=0 -> (n2H0ip0'=1)&(n2H0is'=1);
[n2S0f1] n2H0is=1 -> (n2H0ip1'=1)&(n2H0is'=2);
[n2S0f1] n2H0is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2H0pc=0 & n2H0os>0 -> (n2H0pc'=-5)&(unlk'=false);
[n2H0f1] n2H0pc=-5 & n2H0os>0 & n2H0op0=1 -> (n2H0op0'=n2H0op1)&(n2H0os'=n2H0os-1)&(n2H0pc'=-6);
[] numSteps<maxNumSteps & n2H0pc=-6 -> (n2H0pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2H0pc=0 & n2H0is>0 -> (n2H0pc'=1)&(unlk'=false);
[] n2H0pc=1 -> (n2H0opt'=1)&(n2H0pc'=-4)&(n2H0ra'=2);
[] numSteps<maxNumSteps & n2H0pc=2 -> (n2H0pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S24
n3S24t0:[0..1];
n3S24ip0:[1..3] init 1;
n3S24ip1:[1..3] init 1;
n3S24is:[0..2] init 0;
n3S24op0:[1..3] init 1;
n3S24op1:[1..3] init 1;
n3S24os:[0..2] init 0;
n3S24opt:[1..3] init 1;
n3S24pc:[-6..6] init 0; n3S24ra:[-6..6] init 0;
[] n3S24is<2 & n3S24pc=-1 -> (n3S24ip0'=1)&(n3S24ip1'=n3S24ip0)&(n3S24is'=n3S24is+1)&(n3S24pc'=n3S24ra);
[] n3S24is=2 & n3S24pc=-1 -> (n3S24pc'=n3S24ra);
[] n3S24is=0 & n3S24pc=-2 -> (n3S24pc'=n3S24ra);
[] n3S24is>0 & n3S24is<2 & n3S24pc=-2 -> (n3S24ip1'=n3S24ip0)&(n3S24is'=n3S24is+1)&(n3S24pc'=n3S24ra);
[] n3S24is=2 & n3S24pc=-2 -> (n3S24pc'=n3S24ra);
[] n3S24is=0 & n3S24pc=-3 -> (n3S24pc'=n3S24ra);
[] n3S24is>0 & n3S24pc=-3 -> (n3S24ip0'=n3S24ip1)&(n3S24is'=n3S24is-1)&(n3S24pc'=n3S24ra);
[] n3S24os=0 & n3S24pc=-4 -> (n3S24op0'=n3S24opt)&(n3S24os'=1)&(n3S24pc'=-3);
[] n3S24os=1 & n3S24pc=-4 -> (n3S24op1'=n3S24opt)&(n3S24os'=2)&(n3S24pc'=-3);
[] n3S24os=2 & n3S24pc=-4 -> (n3S24pc'=-3);
[n3S26f1] n3S24is=0 -> (n3S24ip0'=3)&(n3S24is'=1);
[n3S26f1] n3S24is=1 -> (n3S24ip1'=3)&(n3S24is'=2);
[n3S26f1] n3S24is=2 -> true;
[n3S25f1] n3S24is=0 -> (n3S24ip0'=2)&(n3S24is'=1);
[n3S25f1] n3S24is=1 -> (n3S24ip1'=2)&(n3S24is'=2);
[n3S25f1] n3S24is=2 -> true;
[n3S23f3] n3S24is=0 -> (n3S24ip0'=1)&(n3S24is'=1);
[n3S23f3] n3S24is=1 -> (n3S24ip1'=1)&(n3S24is'=2);
[n3S23f3] n3S24is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S24pc=0 & n3S24os>0 -> (n3S24pc'=-5)&(unlk'=false);
[n3S24f3] n3S24pc=-5 & n3S24os>0 & n3S24op0=3 -> (n3S24op0'=n3S24op1)&(n3S24os'=n3S24os-1)&(n3S24pc'=-6);
[n3S24f2] n3S24pc=-5 & n3S24os>0 & n3S24op0=2 -> (n3S24op0'=n3S24op1)&(n3S24os'=n3S24os-1)&(n3S24pc'=-6);
[n3S24f1] n3S24pc=-5 & n3S24os>0 & n3S24op0=1 -> (n3S24op0'=n3S24op1)&(n3S24os'=n3S24os-1)&(n3S24pc'=-6);
[] numSteps<maxNumSteps & n3S24pc=-6 -> (n3S24pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S24pc=0 & n3S24is>0 -> (n3S24pc'=1)&(unlk'=false);
[] n3S24pc=1 -> 0.5:(n3S24t0'=0)&(n3S24pc'=2) + 0.5:(n3S24t0'=1)&(n3S24pc'=2);
[] n3S24pc=2 & (n3S24t0=1) -> (n3S24pc'=3);
[] n3S24pc=2 & !((n3S24t0=1)) -> (n3S24pc'=5);
[] n3S24pc=3 -> (n3S24opt'=2)&(n3S24pc'=-4)&(n3S24ra'=4);
[] n3S24pc=4 -> (n3S24pc'=6);
[] n3S24pc=5 -> (n3S24opt'=3)&(n3S24pc'=-4)&(n3S24ra'=6);
[] numSteps<maxNumSteps & n3S24pc=6 -> (n3S24pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S15
n3S15ip0:[1..3] init 1;
n3S15ip1:[1..3] init 1;
n3S15is:[0..2] init 0;
n3S15op0:[1..3] init 1;
n3S15op1:[1..3] init 1;
n3S15os:[0..2] init 0;
n3S15opt:[1..3] init 1;
n3S15pc:[-6..2] init 0; n3S15ra:[-6..2] init 0;
[] n3S15is<2 & n3S15pc=-1 -> (n3S15ip0'=1)&(n3S15ip1'=n3S15ip0)&(n3S15is'=n3S15is+1)&(n3S15pc'=n3S15ra);
[] n3S15is=2 & n3S15pc=-1 -> (n3S15pc'=n3S15ra);
[] n3S15is=0 & n3S15pc=-2 -> (n3S15pc'=n3S15ra);
[] n3S15is>0 & n3S15is<2 & n3S15pc=-2 -> (n3S15ip1'=n3S15ip0)&(n3S15is'=n3S15is+1)&(n3S15pc'=n3S15ra);
[] n3S15is=2 & n3S15pc=-2 -> (n3S15pc'=n3S15ra);
[] n3S15is=0 & n3S15pc=-3 -> (n3S15pc'=n3S15ra);
[] n3S15is>0 & n3S15pc=-3 -> (n3S15ip0'=n3S15ip1)&(n3S15is'=n3S15is-1)&(n3S15pc'=n3S15ra);
[] n3S15os=0 & n3S15pc=-4 -> (n3S15op0'=n3S15opt)&(n3S15os'=1)&(n3S15pc'=-3);
[] n3S15os=1 & n3S15pc=-4 -> (n3S15op1'=n3S15opt)&(n3S15os'=2)&(n3S15pc'=-3);
[] n3S15os=2 & n3S15pc=-4 -> (n3S15pc'=-3);
[n3S16f1] n3S15is=0 -> (n3S15ip0'=3)&(n3S15is'=1);
[n3S16f1] n3S15is=1 -> (n3S15ip1'=3)&(n3S15is'=2);
[n3S16f1] n3S15is=2 -> true;
[n3S14f2] n3S15is=0 -> (n3S15ip0'=2)&(n3S15is'=1);
[n3S14f2] n3S15is=1 -> (n3S15ip1'=2)&(n3S15is'=2);
[n3S14f2] n3S15is=2 -> true;
[n3S13f2] n3S15is=0 -> (n3S15ip0'=1)&(n3S15is'=1);
[n3S13f2] n3S15is=1 -> (n3S15ip1'=1)&(n3S15is'=2);
[n3S13f2] n3S15is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S15pc=0 & n3S15os>0 -> (n3S15pc'=-5)&(unlk'=false);
[n3S15f3] n3S15pc=-5 & n3S15os>0 & n3S15op0=3 -> (n3S15op0'=n3S15op1)&(n3S15os'=n3S15os-1)&(n3S15pc'=-6);
[n3S15f2] n3S15pc=-5 & n3S15os>0 & n3S15op0=2 -> (n3S15op0'=n3S15op1)&(n3S15os'=n3S15os-1)&(n3S15pc'=-6);
[n3S15f1] n3S15pc=-5 & n3S15os>0 & n3S15op0=1 -> (n3S15op0'=n3S15op1)&(n3S15os'=n3S15os-1)&(n3S15pc'=-6);
[] numSteps<maxNumSteps & n3S15pc=-6 -> (n3S15pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S15pc=0 & n3S15is>0 -> (n3S15pc'=1)&(unlk'=false);
[] n3S15pc=1 -> (n3S15opt'=3)&(n3S15pc'=-4)&(n3S15ra'=2);
[] numSteps<maxNumSteps & n3S15pc=2 -> (n3S15pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S13
n3S13ip0:[1..2] init 1;
n3S13ip1:[1..2] init 1;
n3S13is:[0..2] init 0;
n3S13op0:[1..2] init 1;
n3S13op1:[1..2] init 1;
n3S13os:[0..2] init 0;
n3S13opt:[1..2] init 1;
n3S13pc:[-6..2] init 0; n3S13ra:[-6..2] init 0;
[] n3S13is<2 & n3S13pc=-1 -> (n3S13ip0'=1)&(n3S13ip1'=n3S13ip0)&(n3S13is'=n3S13is+1)&(n3S13pc'=n3S13ra);
[] n3S13is=2 & n3S13pc=-1 -> (n3S13pc'=n3S13ra);
[] n3S13is=0 & n3S13pc=-2 -> (n3S13pc'=n3S13ra);
[] n3S13is>0 & n3S13is<2 & n3S13pc=-2 -> (n3S13ip1'=n3S13ip0)&(n3S13is'=n3S13is+1)&(n3S13pc'=n3S13ra);
[] n3S13is=2 & n3S13pc=-2 -> (n3S13pc'=n3S13ra);
[] n3S13is=0 & n3S13pc=-3 -> (n3S13pc'=n3S13ra);
[] n3S13is>0 & n3S13pc=-3 -> (n3S13ip0'=n3S13ip1)&(n3S13is'=n3S13is-1)&(n3S13pc'=n3S13ra);
[] n3S13os=0 & n3S13pc=-4 -> (n3S13op0'=n3S13opt)&(n3S13os'=1)&(n3S13pc'=-3);
[] n3S13os=1 & n3S13pc=-4 -> (n3S13op1'=n3S13opt)&(n3S13os'=2)&(n3S13pc'=-3);
[] n3S13os=2 & n3S13pc=-4 -> (n3S13pc'=-3);
[n3S15f1] n3S13is=0 -> (n3S13ip0'=2)&(n3S13is'=1);
[n3S15f1] n3S13is=1 -> (n3S13ip1'=2)&(n3S13is'=2);
[n3S15f1] n3S13is=2 -> true;
[n3S12f2] n3S13is=0 -> (n3S13ip0'=1)&(n3S13is'=1);
[n3S12f2] n3S13is=1 -> (n3S13ip1'=1)&(n3S13is'=2);
[n3S12f2] n3S13is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S13pc=0 & n3S13os>0 -> (n3S13pc'=-5)&(unlk'=false);
[n3S13f2] n3S13pc=-5 & n3S13os>0 & n3S13op0=2 -> (n3S13op0'=n3S13op1)&(n3S13os'=n3S13os-1)&(n3S13pc'=-6);
[n3S13f1] n3S13pc=-5 & n3S13os>0 & n3S13op0=1 -> (n3S13op0'=n3S13op1)&(n3S13os'=n3S13os-1)&(n3S13pc'=-6);
[] numSteps<maxNumSteps & n3S13pc=-6 -> (n3S13pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S13pc=0 & n3S13is>0 -> (n3S13pc'=1)&(unlk'=false);
[] n3S13pc=1 -> (n3S13opt'=2)&(n3S13pc'=-4)&(n3S13ra'=2);
[] numSteps<maxNumSteps & n3S13pc=2 -> (n3S13pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S22
n3S22v7failing:[INTMIN..INTMAX] init 2;
n3S22t0:[0..1];
n3S22ip0:[1..2] init 1;
n3S22ip1:[1..2] init 1;
n3S22is:[0..2] init 0;
n3S22op0:[1..2] init 1;
n3S22op1:[1..2] init 1;
n3S22os:[0..2] init 0;
n3S22opt:[1..2] init 1;
n3S22pc:[-6..12] init 0; n3S22ra:[-6..12] init 0;
[] n3S22is<2 & n3S22pc=-1 -> (n3S22ip0'=1)&(n3S22ip1'=n3S22ip0)&(n3S22is'=n3S22is+1)&(n3S22pc'=n3S22ra);
[] n3S22is=2 & n3S22pc=-1 -> (n3S22pc'=n3S22ra);
[] n3S22is=0 & n3S22pc=-2 -> (n3S22pc'=n3S22ra);
[] n3S22is>0 & n3S22is<2 & n3S22pc=-2 -> (n3S22ip1'=n3S22ip0)&(n3S22is'=n3S22is+1)&(n3S22pc'=n3S22ra);
[] n3S22is=2 & n3S22pc=-2 -> (n3S22pc'=n3S22ra);
[] n3S22is=0 & n3S22pc=-3 -> (n3S22pc'=n3S22ra);
[] n3S22is>0 & n3S22pc=-3 -> (n3S22ip0'=n3S22ip1)&(n3S22is'=n3S22is-1)&(n3S22pc'=n3S22ra);
[] n3S22os=0 & n3S22pc=-4 -> (n3S22op0'=n3S22opt)&(n3S22os'=1)&(n3S22pc'=-3);
[] n3S22os=1 & n3S22pc=-4 -> (n3S22op1'=n3S22opt)&(n3S22os'=2)&(n3S22pc'=-3);
[] n3S22os=2 & n3S22pc=-4 -> (n3S22pc'=-3);
[n3S23f2] n3S22is=0 -> (n3S22ip0'=2)&(n3S22is'=1);
[n3S23f2] n3S22is=1 -> (n3S22ip1'=2)&(n3S22is'=2);
[n3S23f2] n3S22is=2 -> true;
[n3S20f3] n3S22is=0 -> (n3S22ip0'=1)&(n3S22is'=1);
[n3S20f3] n3S22is=1 -> (n3S22ip1'=1)&(n3S22is'=2);
[n3S20f3] n3S22is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S22pc=0 & n3S22os>0 -> (n3S22pc'=-5)&(unlk'=false);
[n3S22f2] n3S22pc=-5 & n3S22os>0 & n3S22op0=2 -> (n3S22op0'=n3S22op1)&(n3S22os'=n3S22os-1)&(n3S22pc'=-6);
[n3S22f1] n3S22pc=-5 & n3S22os>0 & n3S22op0=1 -> (n3S22op0'=n3S22op1)&(n3S22os'=n3S22os-1)&(n3S22pc'=-6);
[] numSteps<maxNumSteps & n3S22pc=-6 -> (n3S22pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S22pc=0 & n3S22is>0 -> (n3S22pc'=1)&(unlk'=false);
[] n3S22pc=1 & (n3S22v7failing=2) -> (n3S22pc'=2);
[] n3S22pc=1 & !((n3S22v7failing=2)) -> (n3S22pc'=8);
[] n3S22pc=2 -> 0.999:(n3S22t0'=0)&(n3S22pc'=3) + 0.001:(n3S22t0'=1)&(n3S22pc'=3);
[] n3S22pc=3 & (n3S22t0=1) -> (n3S22pc'=4);
[] n3S22pc=3 & !((n3S22t0=1)) -> (n3S22pc'=6);
[] n3S22pc=4 & 1>=INTMIN & 1<=INTMAX -> (n3S22v7failing'=1)&(n3S22pc'=5);
[] n3S22pc=5 -> (n3S22pc'=7);
[] n3S22pc=6 & 0>=INTMIN & 0<=INTMAX -> (n3S22v7failing'=0)&(n3S22pc'=7);
[] n3S22pc=7 -> (n3S22pc'=8);
[] n3S22pc=8 & (n3S22v7failing=1) -> (n3S22pc'=9);
[] n3S22pc=8 & !((n3S22v7failing=1)) -> (n3S22pc'=11);
[] n3S22pc=9 -> (n3S22pc'=-3)&(n3S22ra'=10);
[] n3S22pc=10 -> (n3S22pc'=12);
[] n3S22pc=11 -> (n3S22opt'=2)&(n3S22pc'=-4)&(n3S22ra'=12);
[] numSteps<maxNumSteps & n3S22pc=12 -> (n3S22pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S17
n3S17ip0:[1..2] init 1;
n3S17ip1:[1..2] init 1;
n3S17is:[0..2] init 0;
n3S17op0:[1..2] init 1;
n3S17op1:[1..2] init 1;
n3S17os:[0..2] init 0;
n3S17opt:[1..2] init 1;
n3S17pc:[-6..2] init 0; n3S17ra:[-6..2] init 0;
[] n3S17is<2 & n3S17pc=-1 -> (n3S17ip0'=1)&(n3S17ip1'=n3S17ip0)&(n3S17is'=n3S17is+1)&(n3S17pc'=n3S17ra);
[] n3S17is=2 & n3S17pc=-1 -> (n3S17pc'=n3S17ra);
[] n3S17is=0 & n3S17pc=-2 -> (n3S17pc'=n3S17ra);
[] n3S17is>0 & n3S17is<2 & n3S17pc=-2 -> (n3S17ip1'=n3S17ip0)&(n3S17is'=n3S17is+1)&(n3S17pc'=n3S17ra);
[] n3S17is=2 & n3S17pc=-2 -> (n3S17pc'=n3S17ra);
[] n3S17is=0 & n3S17pc=-3 -> (n3S17pc'=n3S17ra);
[] n3S17is>0 & n3S17pc=-3 -> (n3S17ip0'=n3S17ip1)&(n3S17is'=n3S17is-1)&(n3S17pc'=n3S17ra);
[] n3S17os=0 & n3S17pc=-4 -> (n3S17op0'=n3S17opt)&(n3S17os'=1)&(n3S17pc'=-3);
[] n3S17os=1 & n3S17pc=-4 -> (n3S17op1'=n3S17opt)&(n3S17os'=2)&(n3S17pc'=-3);
[] n3S17os=2 & n3S17pc=-4 -> (n3S17pc'=-3);
[n3S19f1] n3S17is=0 -> (n3S17ip0'=2)&(n3S17is'=1);
[n3S19f1] n3S17is=1 -> (n3S17ip1'=2)&(n3S17is'=2);
[n3S19f1] n3S17is=2 -> true;
[n3S16f2] n3S17is=0 -> (n3S17ip0'=1)&(n3S17is'=1);
[n3S16f2] n3S17is=1 -> (n3S17ip1'=1)&(n3S17is'=2);
[n3S16f2] n3S17is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S17pc=0 & n3S17os>0 -> (n3S17pc'=-5)&(unlk'=false);
[n3S17f2] n3S17pc=-5 & n3S17os>0 & n3S17op0=2 -> (n3S17op0'=n3S17op1)&(n3S17os'=n3S17os-1)&(n3S17pc'=-6);
[n3S17f1] n3S17pc=-5 & n3S17os>0 & n3S17op0=1 -> (n3S17op0'=n3S17op1)&(n3S17os'=n3S17os-1)&(n3S17pc'=-6);
[] numSteps<maxNumSteps & n3S17pc=-6 -> (n3S17pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S17pc=0 & n3S17is>0 -> (n3S17pc'=1)&(unlk'=false);
[] n3S17pc=1 -> (n3S17opt'=2)&(n3S17pc'=-4)&(n3S17ra'=2);
[] numSteps<maxNumSteps & n3S17pc=2 -> (n3S17pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S4
n2S4t0:[0..1];
n2S4ip0:[1..3] init 1;
n2S4ip1:[1..3] init 1;
n2S4is:[0..2] init 0;
n2S4op0:[1..3] init 1;
n2S4op1:[1..3] init 1;
n2S4os:[0..2] init 0;
n2S4opt:[1..3] init 1;
n2S4pc:[-6..6] init 0; n2S4ra:[-6..6] init 0;
[] n2S4is<2 & n2S4pc=-1 -> (n2S4ip0'=1)&(n2S4ip1'=n2S4ip0)&(n2S4is'=n2S4is+1)&(n2S4pc'=n2S4ra);
[] n2S4is=2 & n2S4pc=-1 -> (n2S4pc'=n2S4ra);
[] n2S4is=0 & n2S4pc=-2 -> (n2S4pc'=n2S4ra);
[] n2S4is>0 & n2S4is<2 & n2S4pc=-2 -> (n2S4ip1'=n2S4ip0)&(n2S4is'=n2S4is+1)&(n2S4pc'=n2S4ra);
[] n2S4is=2 & n2S4pc=-2 -> (n2S4pc'=n2S4ra);
[] n2S4is=0 & n2S4pc=-3 -> (n2S4pc'=n2S4ra);
[] n2S4is>0 & n2S4pc=-3 -> (n2S4ip0'=n2S4ip1)&(n2S4is'=n2S4is-1)&(n2S4pc'=n2S4ra);
[] n2S4os=0 & n2S4pc=-4 -> (n2S4op0'=n2S4opt)&(n2S4os'=1)&(n2S4pc'=-3);
[] n2S4os=1 & n2S4pc=-4 -> (n2S4op1'=n2S4opt)&(n2S4os'=2)&(n2S4pc'=-3);
[] n2S4os=2 & n2S4pc=-4 -> (n2S4pc'=-3);
[n2S6f1] n2S4is=0 -> (n2S4ip0'=3)&(n2S4is'=1);
[n2S6f1] n2S4is=1 -> (n2S4ip1'=3)&(n2S4is'=2);
[n2S6f1] n2S4is=2 -> true;
[n2S5f1] n2S4is=0 -> (n2S4ip0'=2)&(n2S4is'=1);
[n2S5f1] n2S4is=1 -> (n2S4ip1'=2)&(n2S4is'=2);
[n2S5f1] n2S4is=2 -> true;
[n2S3f3] n2S4is=0 -> (n2S4ip0'=1)&(n2S4is'=1);
[n2S3f3] n2S4is=1 -> (n2S4ip1'=1)&(n2S4is'=2);
[n2S3f3] n2S4is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S4pc=0 & n2S4os>0 -> (n2S4pc'=-5)&(unlk'=false);
[n2S4f3] n2S4pc=-5 & n2S4os>0 & n2S4op0=3 -> (n2S4op0'=n2S4op1)&(n2S4os'=n2S4os-1)&(n2S4pc'=-6);
[n2S4f2] n2S4pc=-5 & n2S4os>0 & n2S4op0=2 -> (n2S4op0'=n2S4op1)&(n2S4os'=n2S4os-1)&(n2S4pc'=-6);
[n2S4f1] n2S4pc=-5 & n2S4os>0 & n2S4op0=1 -> (n2S4op0'=n2S4op1)&(n2S4os'=n2S4os-1)&(n2S4pc'=-6);
[] numSteps<maxNumSteps & n2S4pc=-6 -> (n2S4pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S4pc=0 & n2S4is>0 -> (n2S4pc'=1)&(unlk'=false);
[] n2S4pc=1 -> 0.5:(n2S4t0'=0)&(n2S4pc'=2) + 0.5:(n2S4t0'=1)&(n2S4pc'=2);
[] n2S4pc=2 & (n2S4t0=1) -> (n2S4pc'=3);
[] n2S4pc=2 & !((n2S4t0=1)) -> (n2S4pc'=5);
[] n2S4pc=3 -> (n2S4opt'=2)&(n2S4pc'=-4)&(n2S4ra'=4);
[] n2S4pc=4 -> (n2S4pc'=6);
[] n2S4pc=5 -> (n2S4opt'=3)&(n2S4pc'=-4)&(n2S4ra'=6);
[] numSteps<maxNumSteps & n2S4pc=6 -> (n2S4pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S26
n3S26v7failing:[INTMIN..INTMAX] init 2;
n3S26t0:[0..1];
n3S26ip0:[1..2] init 1;
n3S26ip1:[1..2] init 1;
n3S26is:[0..2] init 0;
n3S26op0:[1..2] init 1;
n3S26op1:[1..2] init 1;
n3S26os:[0..2] init 0;
n3S26opt:[1..2] init 1;
n3S26pc:[-6..12] init 0; n3S26ra:[-6..12] init 0;
[] n3S26is<2 & n3S26pc=-1 -> (n3S26ip0'=1)&(n3S26ip1'=n3S26ip0)&(n3S26is'=n3S26is+1)&(n3S26pc'=n3S26ra);
[] n3S26is=2 & n3S26pc=-1 -> (n3S26pc'=n3S26ra);
[] n3S26is=0 & n3S26pc=-2 -> (n3S26pc'=n3S26ra);
[] n3S26is>0 & n3S26is<2 & n3S26pc=-2 -> (n3S26ip1'=n3S26ip0)&(n3S26is'=n3S26is+1)&(n3S26pc'=n3S26ra);
[] n3S26is=2 & n3S26pc=-2 -> (n3S26pc'=n3S26ra);
[] n3S26is=0 & n3S26pc=-3 -> (n3S26pc'=n3S26ra);
[] n3S26is>0 & n3S26pc=-3 -> (n3S26ip0'=n3S26ip1)&(n3S26is'=n3S26is-1)&(n3S26pc'=n3S26ra);
[] n3S26os=0 & n3S26pc=-4 -> (n3S26op0'=n3S26opt)&(n3S26os'=1)&(n3S26pc'=-3);
[] n3S26os=1 & n3S26pc=-4 -> (n3S26op1'=n3S26opt)&(n3S26os'=2)&(n3S26pc'=-3);
[] n3S26os=2 & n3S26pc=-4 -> (n3S26pc'=-3);
[n3S27f2] n3S26is=0 -> (n3S26ip0'=2)&(n3S26is'=1);
[n3S27f2] n3S26is=1 -> (n3S26ip1'=2)&(n3S26is'=2);
[n3S27f2] n3S26is=2 -> true;
[n3S24f3] n3S26is=0 -> (n3S26ip0'=1)&(n3S26is'=1);
[n3S24f3] n3S26is=1 -> (n3S26ip1'=1)&(n3S26is'=2);
[n3S24f3] n3S26is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S26pc=0 & n3S26os>0 -> (n3S26pc'=-5)&(unlk'=false);
[n3S26f2] n3S26pc=-5 & n3S26os>0 & n3S26op0=2 -> (n3S26op0'=n3S26op1)&(n3S26os'=n3S26os-1)&(n3S26pc'=-6);
[n3S26f1] n3S26pc=-5 & n3S26os>0 & n3S26op0=1 -> (n3S26op0'=n3S26op1)&(n3S26os'=n3S26os-1)&(n3S26pc'=-6);
[] numSteps<maxNumSteps & n3S26pc=-6 -> (n3S26pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S26pc=0 & n3S26is>0 -> (n3S26pc'=1)&(unlk'=false);
[] n3S26pc=1 & (n3S26v7failing=2) -> (n3S26pc'=2);
[] n3S26pc=1 & !((n3S26v7failing=2)) -> (n3S26pc'=8);
[] n3S26pc=2 -> 0.999:(n3S26t0'=0)&(n3S26pc'=3) + 0.001:(n3S26t0'=1)&(n3S26pc'=3);
[] n3S26pc=3 & (n3S26t0=1) -> (n3S26pc'=4);
[] n3S26pc=3 & !((n3S26t0=1)) -> (n3S26pc'=6);
[] n3S26pc=4 & 1>=INTMIN & 1<=INTMAX -> (n3S26v7failing'=1)&(n3S26pc'=5);
[] n3S26pc=5 -> (n3S26pc'=7);
[] n3S26pc=6 & 0>=INTMIN & 0<=INTMAX -> (n3S26v7failing'=0)&(n3S26pc'=7);
[] n3S26pc=7 -> (n3S26pc'=8);
[] n3S26pc=8 & (n3S26v7failing=1) -> (n3S26pc'=9);
[] n3S26pc=8 & !((n3S26v7failing=1)) -> (n3S26pc'=11);
[] n3S26pc=9 -> (n3S26pc'=-3)&(n3S26ra'=10);
[] n3S26pc=10 -> (n3S26pc'=12);
[] n3S26pc=11 -> (n3S26opt'=2)&(n3S26pc'=-4)&(n3S26ra'=12);
[] numSteps<maxNumSteps & n3S26pc=12 -> (n3S26pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S8
n2S8t0:[0..1];
n2S8ip0:[1..3] init 1;
n2S8ip1:[1..3] init 1;
n2S8is:[0..2] init 0;
n2S8op0:[1..3] init 1;
n2S8op1:[1..3] init 1;
n2S8os:[0..2] init 0;
n2S8opt:[1..3] init 1;
n2S8pc:[-6..6] init 0; n2S8ra:[-6..6] init 0;
[] n2S8is<2 & n2S8pc=-1 -> (n2S8ip0'=1)&(n2S8ip1'=n2S8ip0)&(n2S8is'=n2S8is+1)&(n2S8pc'=n2S8ra);
[] n2S8is=2 & n2S8pc=-1 -> (n2S8pc'=n2S8ra);
[] n2S8is=0 & n2S8pc=-2 -> (n2S8pc'=n2S8ra);
[] n2S8is>0 & n2S8is<2 & n2S8pc=-2 -> (n2S8ip1'=n2S8ip0)&(n2S8is'=n2S8is+1)&(n2S8pc'=n2S8ra);
[] n2S8is=2 & n2S8pc=-2 -> (n2S8pc'=n2S8ra);
[] n2S8is=0 & n2S8pc=-3 -> (n2S8pc'=n2S8ra);
[] n2S8is>0 & n2S8pc=-3 -> (n2S8ip0'=n2S8ip1)&(n2S8is'=n2S8is-1)&(n2S8pc'=n2S8ra);
[] n2S8os=0 & n2S8pc=-4 -> (n2S8op0'=n2S8opt)&(n2S8os'=1)&(n2S8pc'=-3);
[] n2S8os=1 & n2S8pc=-4 -> (n2S8op1'=n2S8opt)&(n2S8os'=2)&(n2S8pc'=-3);
[] n2S8os=2 & n2S8pc=-4 -> (n2S8pc'=-3);
[n3S10f1] n2S8is=0 -> (n2S8ip0'=3)&(n2S8is'=1);
[n3S10f1] n2S8is=1 -> (n2S8ip1'=3)&(n2S8is'=2);
[n3S10f1] n2S8is=2 -> true;
[n2S9f1] n2S8is=0 -> (n2S8ip0'=2)&(n2S8is'=1);
[n2S9f1] n2S8is=1 -> (n2S8ip1'=2)&(n2S8is'=2);
[n2S9f1] n2S8is=2 -> true;
[n2S7f3] n2S8is=0 -> (n2S8ip0'=1)&(n2S8is'=1);
[n2S7f3] n2S8is=1 -> (n2S8ip1'=1)&(n2S8is'=2);
[n2S7f3] n2S8is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S8pc=0 & n2S8os>0 -> (n2S8pc'=-5)&(unlk'=false);
[n2S8f3] n2S8pc=-5 & n2S8os>0 & n2S8op0=3 -> (n2S8op0'=n2S8op1)&(n2S8os'=n2S8os-1)&(n2S8pc'=-6);
[n2S8f2] n2S8pc=-5 & n2S8os>0 & n2S8op0=2 -> (n2S8op0'=n2S8op1)&(n2S8os'=n2S8os-1)&(n2S8pc'=-6);
[n2S8f1] n2S8pc=-5 & n2S8os>0 & n2S8op0=1 -> (n2S8op0'=n2S8op1)&(n2S8os'=n2S8os-1)&(n2S8pc'=-6);
[] numSteps<maxNumSteps & n2S8pc=-6 -> (n2S8pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S8pc=0 & n2S8is>0 -> (n2S8pc'=1)&(unlk'=false);
[] n2S8pc=1 -> 0.5:(n2S8t0'=0)&(n2S8pc'=2) + 0.5:(n2S8t0'=1)&(n2S8pc'=2);
[] n2S8pc=2 & (n2S8t0=1) -> (n2S8pc'=3);
[] n2S8pc=2 & !((n2S8t0=1)) -> (n2S8pc'=5);
[] n2S8pc=3 -> (n2S8opt'=2)&(n2S8pc'=-4)&(n2S8ra'=4);
[] n2S8pc=4 -> (n2S8pc'=6);
[] n2S8pc=5 -> (n2S8opt'=3)&(n2S8pc'=-4)&(n2S8ra'=6);
[] numSteps<maxNumSteps & n2S8pc=6 -> (n2S8pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2H1
n2H1v7arrived:[INTMIN..INTMAX] init 0;
n2H1ip0:[1..2] init 1;
n2H1ip1:[1..2] init 1;
n2H1is:[0..2] init 0;
n2H1op0:[1..2] init 1;
n2H1op1:[1..2] init 1;
n2H1os:[0..2] init 0;
n2H1opt:[1..2] init 1;
n2H1pc:[-6..3] init 0; n2H1ra:[-6..3] init 0;
[] n2H1is<2 & n2H1pc=-1 -> (n2H1ip0'=1)&(n2H1ip1'=n2H1ip0)&(n2H1is'=n2H1is+1)&(n2H1pc'=n2H1ra);
[] n2H1is=2 & n2H1pc=-1 -> (n2H1pc'=n2H1ra);
[] n2H1is=0 & n2H1pc=-2 -> (n2H1pc'=n2H1ra);
[] n2H1is>0 & n2H1is<2 & n2H1pc=-2 -> (n2H1ip1'=n2H1ip0)&(n2H1is'=n2H1is+1)&(n2H1pc'=n2H1ra);
[] n2H1is=2 & n2H1pc=-2 -> (n2H1pc'=n2H1ra);
[] n2H1is=0 & n2H1pc=-3 -> (n2H1pc'=n2H1ra);
[] n2H1is>0 & n2H1pc=-3 -> (n2H1ip0'=n2H1ip1)&(n2H1is'=n2H1is-1)&(n2H1pc'=n2H1ra);
[] n2H1os=0 & n2H1pc=-4 -> (n2H1op0'=n2H1opt)&(n2H1os'=1)&(n2H1pc'=-3);
[] n2H1os=1 & n2H1pc=-4 -> (n2H1op1'=n2H1opt)&(n2H1os'=2)&(n2H1pc'=-3);
[] n2H1os=2 & n2H1pc=-4 -> (n2H1pc'=-3);
[n3S27f3] n2H1is=0 -> (n2H1ip0'=1)&(n2H1is'=1);
[n3S27f3] n2H1is=1 -> (n2H1ip1'=1)&(n2H1is'=2);
[n3S27f3] n2H1is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2H1pc=0 & n2H1os>0 -> (n2H1pc'=-5)&(unlk'=false);
[n2H1f1] n2H1pc=-5 & n2H1os>0 & n2H1op0=1 -> (n2H1op0'=n2H1op1)&(n2H1os'=n2H1os-1)&(n2H1pc'=-6);
[] numSteps<maxNumSteps & n2H1pc=-6 -> (n2H1pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2H1pc=0 & n2H1is>0 -> (n2H1pc'=1)&(unlk'=false);
[] n2H1pc=1 & 1>=INTMIN & 1<=INTMAX -> (n2H1v7arrived'=1)&(n2H1pc'=2);
[] n2H1pc=2 -> (n2H1pc'=-3)&(n2H1ra'=3);
[] numSteps<maxNumSteps & n2H1pc=3 -> (n2H1pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S6
n2S6v7failing:[INTMIN..INTMAX] init 2;
n2S6t0:[0..1];
n2S6ip0:[1..2] init 1;
n2S6ip1:[1..2] init 1;
n2S6is:[0..2] init 0;
n2S6op0:[1..2] init 1;
n2S6op1:[1..2] init 1;
n2S6os:[0..2] init 0;
n2S6opt:[1..2] init 1;
n2S6pc:[-6..12] init 0; n2S6ra:[-6..12] init 0;
[] n2S6is<2 & n2S6pc=-1 -> (n2S6ip0'=1)&(n2S6ip1'=n2S6ip0)&(n2S6is'=n2S6is+1)&(n2S6pc'=n2S6ra);
[] n2S6is=2 & n2S6pc=-1 -> (n2S6pc'=n2S6ra);
[] n2S6is=0 & n2S6pc=-2 -> (n2S6pc'=n2S6ra);
[] n2S6is>0 & n2S6is<2 & n2S6pc=-2 -> (n2S6ip1'=n2S6ip0)&(n2S6is'=n2S6is+1)&(n2S6pc'=n2S6ra);
[] n2S6is=2 & n2S6pc=-2 -> (n2S6pc'=n2S6ra);
[] n2S6is=0 & n2S6pc=-3 -> (n2S6pc'=n2S6ra);
[] n2S6is>0 & n2S6pc=-3 -> (n2S6ip0'=n2S6ip1)&(n2S6is'=n2S6is-1)&(n2S6pc'=n2S6ra);
[] n2S6os=0 & n2S6pc=-4 -> (n2S6op0'=n2S6opt)&(n2S6os'=1)&(n2S6pc'=-3);
[] n2S6os=1 & n2S6pc=-4 -> (n2S6op1'=n2S6opt)&(n2S6os'=2)&(n2S6pc'=-3);
[] n2S6os=2 & n2S6pc=-4 -> (n2S6pc'=-3);
[n2S7f2] n2S6is=0 -> (n2S6ip0'=2)&(n2S6is'=1);
[n2S7f2] n2S6is=1 -> (n2S6ip1'=2)&(n2S6is'=2);
[n2S7f2] n2S6is=2 -> true;
[n2S4f3] n2S6is=0 -> (n2S6ip0'=1)&(n2S6is'=1);
[n2S4f3] n2S6is=1 -> (n2S6ip1'=1)&(n2S6is'=2);
[n2S4f3] n2S6is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S6pc=0 & n2S6os>0 -> (n2S6pc'=-5)&(unlk'=false);
[n2S6f2] n2S6pc=-5 & n2S6os>0 & n2S6op0=2 -> (n2S6op0'=n2S6op1)&(n2S6os'=n2S6os-1)&(n2S6pc'=-6);
[n2S6f1] n2S6pc=-5 & n2S6os>0 & n2S6op0=1 -> (n2S6op0'=n2S6op1)&(n2S6os'=n2S6os-1)&(n2S6pc'=-6);
[] numSteps<maxNumSteps & n2S6pc=-6 -> (n2S6pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S6pc=0 & n2S6is>0 -> (n2S6pc'=1)&(unlk'=false);
[] n2S6pc=1 & (n2S6v7failing=2) -> (n2S6pc'=2);
[] n2S6pc=1 & !((n2S6v7failing=2)) -> (n2S6pc'=8);
[] n2S6pc=2 -> 0.999:(n2S6t0'=0)&(n2S6pc'=3) + 0.001:(n2S6t0'=1)&(n2S6pc'=3);
[] n2S6pc=3 & (n2S6t0=1) -> (n2S6pc'=4);
[] n2S6pc=3 & !((n2S6t0=1)) -> (n2S6pc'=6);
[] n2S6pc=4 & 1>=INTMIN & 1<=INTMAX -> (n2S6v7failing'=1)&(n2S6pc'=5);
[] n2S6pc=5 -> (n2S6pc'=7);
[] n2S6pc=6 & 0>=INTMIN & 0<=INTMAX -> (n2S6v7failing'=0)&(n2S6pc'=7);
[] n2S6pc=7 -> (n2S6pc'=8);
[] n2S6pc=8 & (n2S6v7failing=1) -> (n2S6pc'=9);
[] n2S6pc=8 & !((n2S6v7failing=1)) -> (n2S6pc'=11);
[] n2S6pc=9 -> (n2S6pc'=-3)&(n2S6ra'=10);
[] n2S6pc=10 -> (n2S6pc'=12);
[] n2S6pc=11 -> (n2S6opt'=2)&(n2S6pc'=-4)&(n2S6ra'=12);
[] numSteps<maxNumSteps & n2S6pc=12 -> (n2S6pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S11
n3S11ip0:[1..3] init 1;
n3S11ip1:[1..3] init 1;
n3S11is:[0..2] init 0;
n3S11op0:[1..3] init 1;
n3S11op1:[1..3] init 1;
n3S11os:[0..2] init 0;
n3S11opt:[1..3] init 1;
n3S11pc:[-6..2] init 0; n3S11ra:[-6..2] init 0;
[] n3S11is<2 & n3S11pc=-1 -> (n3S11ip0'=1)&(n3S11ip1'=n3S11ip0)&(n3S11is'=n3S11is+1)&(n3S11pc'=n3S11ra);
[] n3S11is=2 & n3S11pc=-1 -> (n3S11pc'=n3S11ra);
[] n3S11is=0 & n3S11pc=-2 -> (n3S11pc'=n3S11ra);
[] n3S11is>0 & n3S11is<2 & n3S11pc=-2 -> (n3S11ip1'=n3S11ip0)&(n3S11is'=n3S11is+1)&(n3S11pc'=n3S11ra);
[] n3S11is=2 & n3S11pc=-2 -> (n3S11pc'=n3S11ra);
[] n3S11is=0 & n3S11pc=-3 -> (n3S11pc'=n3S11ra);
[] n3S11is>0 & n3S11pc=-3 -> (n3S11ip0'=n3S11ip1)&(n3S11is'=n3S11is-1)&(n3S11pc'=n3S11ra);
[] n3S11os=0 & n3S11pc=-4 -> (n3S11op0'=n3S11opt)&(n3S11os'=1)&(n3S11pc'=-3);
[] n3S11os=1 & n3S11pc=-4 -> (n3S11op1'=n3S11opt)&(n3S11os'=2)&(n3S11pc'=-3);
[] n3S11os=2 & n3S11pc=-4 -> (n3S11pc'=-3);
[n3S12f1] n3S11is=0 -> (n3S11ip0'=3)&(n3S11is'=1);
[n3S12f1] n3S11is=1 -> (n3S11ip1'=3)&(n3S11is'=2);
[n3S12f1] n3S11is=2 -> true;
[n3S10f2] n3S11is=0 -> (n3S11ip0'=2)&(n3S11is'=1);
[n3S10f2] n3S11is=1 -> (n3S11ip1'=2)&(n3S11is'=2);
[n3S10f2] n3S11is=2 -> true;
[n2S9f2] n3S11is=0 -> (n3S11ip0'=1)&(n3S11is'=1);
[n2S9f2] n3S11is=1 -> (n3S11ip1'=1)&(n3S11is'=2);
[n2S9f2] n3S11is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S11pc=0 & n3S11os>0 -> (n3S11pc'=-5)&(unlk'=false);
[n3S11f3] n3S11pc=-5 & n3S11os>0 & n3S11op0=3 -> (n3S11op0'=n3S11op1)&(n3S11os'=n3S11os-1)&(n3S11pc'=-6);
[n3S11f2] n3S11pc=-5 & n3S11os>0 & n3S11op0=2 -> (n3S11op0'=n3S11op1)&(n3S11os'=n3S11os-1)&(n3S11pc'=-6);
[n3S11f1] n3S11pc=-5 & n3S11os>0 & n3S11op0=1 -> (n3S11op0'=n3S11op1)&(n3S11os'=n3S11os-1)&(n3S11pc'=-6);
[] numSteps<maxNumSteps & n3S11pc=-6 -> (n3S11pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S11pc=0 & n3S11is>0 -> (n3S11pc'=1)&(unlk'=false);
[] n3S11pc=1 -> (n3S11opt'=3)&(n3S11pc'=-4)&(n3S11ra'=2);
[] numSteps<maxNumSteps & n3S11pc=2 -> (n3S11pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S19
n3S19ip0:[1..3] init 1;
n3S19ip1:[1..3] init 1;
n3S19is:[0..2] init 0;
n3S19op0:[1..3] init 1;
n3S19op1:[1..3] init 1;
n3S19os:[0..2] init 0;
n3S19opt:[1..3] init 1;
n3S19pc:[-6..2] init 0; n3S19ra:[-6..2] init 0;
[] n3S19is<2 & n3S19pc=-1 -> (n3S19ip0'=1)&(n3S19ip1'=n3S19ip0)&(n3S19is'=n3S19is+1)&(n3S19pc'=n3S19ra);
[] n3S19is=2 & n3S19pc=-1 -> (n3S19pc'=n3S19ra);
[] n3S19is=0 & n3S19pc=-2 -> (n3S19pc'=n3S19ra);
[] n3S19is>0 & n3S19is<2 & n3S19pc=-2 -> (n3S19ip1'=n3S19ip0)&(n3S19is'=n3S19is+1)&(n3S19pc'=n3S19ra);
[] n3S19is=2 & n3S19pc=-2 -> (n3S19pc'=n3S19ra);
[] n3S19is=0 & n3S19pc=-3 -> (n3S19pc'=n3S19ra);
[] n3S19is>0 & n3S19pc=-3 -> (n3S19ip0'=n3S19ip1)&(n3S19is'=n3S19is-1)&(n3S19pc'=n3S19ra);
[] n3S19os=0 & n3S19pc=-4 -> (n3S19op0'=n3S19opt)&(n3S19os'=1)&(n3S19pc'=-3);
[] n3S19os=1 & n3S19pc=-4 -> (n3S19op1'=n3S19opt)&(n3S19os'=2)&(n3S19pc'=-3);
[] n3S19os=2 & n3S19pc=-4 -> (n3S19pc'=-3);
[n3S20f1] n3S19is=0 -> (n3S19ip0'=3)&(n3S19is'=1);
[n3S20f1] n3S19is=1 -> (n3S19ip1'=3)&(n3S19is'=2);
[n3S20f1] n3S19is=2 -> true;
[n3S18f2] n3S19is=0 -> (n3S19ip0'=2)&(n3S19is'=1);
[n3S18f2] n3S19is=1 -> (n3S19ip1'=2)&(n3S19is'=2);
[n3S18f2] n3S19is=2 -> true;
[n3S17f2] n3S19is=0 -> (n3S19ip0'=1)&(n3S19is'=1);
[n3S17f2] n3S19is=1 -> (n3S19ip1'=1)&(n3S19is'=2);
[n3S17f2] n3S19is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S19pc=0 & n3S19os>0 -> (n3S19pc'=-5)&(unlk'=false);
[n3S19f3] n3S19pc=-5 & n3S19os>0 & n3S19op0=3 -> (n3S19op0'=n3S19op1)&(n3S19os'=n3S19os-1)&(n3S19pc'=-6);
[n3S19f2] n3S19pc=-5 & n3S19os>0 & n3S19op0=2 -> (n3S19op0'=n3S19op1)&(n3S19os'=n3S19os-1)&(n3S19pc'=-6);
[n3S19f1] n3S19pc=-5 & n3S19os>0 & n3S19op0=1 -> (n3S19op0'=n3S19op1)&(n3S19os'=n3S19os-1)&(n3S19pc'=-6);
[] numSteps<maxNumSteps & n3S19pc=-6 -> (n3S19pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S19pc=0 & n3S19is>0 -> (n3S19pc'=1)&(unlk'=false);
[] n3S19pc=1 -> (n3S19opt'=3)&(n3S19pc'=-4)&(n3S19ra'=2);
[] numSteps<maxNumSteps & n3S19pc=2 -> (n3S19pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S10
n3S10v7failing:[INTMIN..INTMAX] init 2;
n3S10t0:[0..1];
n3S10ip0:[1..2] init 1;
n3S10ip1:[1..2] init 1;
n3S10is:[0..2] init 0;
n3S10op0:[1..2] init 1;
n3S10op1:[1..2] init 1;
n3S10os:[0..2] init 0;
n3S10opt:[1..2] init 1;
n3S10pc:[-6..12] init 0; n3S10ra:[-6..12] init 0;
[] n3S10is<2 & n3S10pc=-1 -> (n3S10ip0'=1)&(n3S10ip1'=n3S10ip0)&(n3S10is'=n3S10is+1)&(n3S10pc'=n3S10ra);
[] n3S10is=2 & n3S10pc=-1 -> (n3S10pc'=n3S10ra);
[] n3S10is=0 & n3S10pc=-2 -> (n3S10pc'=n3S10ra);
[] n3S10is>0 & n3S10is<2 & n3S10pc=-2 -> (n3S10ip1'=n3S10ip0)&(n3S10is'=n3S10is+1)&(n3S10pc'=n3S10ra);
[] n3S10is=2 & n3S10pc=-2 -> (n3S10pc'=n3S10ra);
[] n3S10is=0 & n3S10pc=-3 -> (n3S10pc'=n3S10ra);
[] n3S10is>0 & n3S10pc=-3 -> (n3S10ip0'=n3S10ip1)&(n3S10is'=n3S10is-1)&(n3S10pc'=n3S10ra);
[] n3S10os=0 & n3S10pc=-4 -> (n3S10op0'=n3S10opt)&(n3S10os'=1)&(n3S10pc'=-3);
[] n3S10os=1 & n3S10pc=-4 -> (n3S10op1'=n3S10opt)&(n3S10os'=2)&(n3S10pc'=-3);
[] n3S10os=2 & n3S10pc=-4 -> (n3S10pc'=-3);
[n3S11f2] n3S10is=0 -> (n3S10ip0'=2)&(n3S10is'=1);
[n3S11f2] n3S10is=1 -> (n3S10ip1'=2)&(n3S10is'=2);
[n3S11f2] n3S10is=2 -> true;
[n2S8f3] n3S10is=0 -> (n3S10ip0'=1)&(n3S10is'=1);
[n2S8f3] n3S10is=1 -> (n3S10ip1'=1)&(n3S10is'=2);
[n2S8f3] n3S10is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S10pc=0 & n3S10os>0 -> (n3S10pc'=-5)&(unlk'=false);
[n3S10f2] n3S10pc=-5 & n3S10os>0 & n3S10op0=2 -> (n3S10op0'=n3S10op1)&(n3S10os'=n3S10os-1)&(n3S10pc'=-6);
[n3S10f1] n3S10pc=-5 & n3S10os>0 & n3S10op0=1 -> (n3S10op0'=n3S10op1)&(n3S10os'=n3S10os-1)&(n3S10pc'=-6);
[] numSteps<maxNumSteps & n3S10pc=-6 -> (n3S10pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S10pc=0 & n3S10is>0 -> (n3S10pc'=1)&(unlk'=false);
[] n3S10pc=1 & (n3S10v7failing=2) -> (n3S10pc'=2);
[] n3S10pc=1 & !((n3S10v7failing=2)) -> (n3S10pc'=8);
[] n3S10pc=2 -> 0.999:(n3S10t0'=0)&(n3S10pc'=3) + 0.001:(n3S10t0'=1)&(n3S10pc'=3);
[] n3S10pc=3 & (n3S10t0=1) -> (n3S10pc'=4);
[] n3S10pc=3 & !((n3S10t0=1)) -> (n3S10pc'=6);
[] n3S10pc=4 & 1>=INTMIN & 1<=INTMAX -> (n3S10v7failing'=1)&(n3S10pc'=5);
[] n3S10pc=5 -> (n3S10pc'=7);
[] n3S10pc=6 & 0>=INTMIN & 0<=INTMAX -> (n3S10v7failing'=0)&(n3S10pc'=7);
[] n3S10pc=7 -> (n3S10pc'=8);
[] n3S10pc=8 & (n3S10v7failing=1) -> (n3S10pc'=9);
[] n3S10pc=8 & !((n3S10v7failing=1)) -> (n3S10pc'=11);
[] n3S10pc=9 -> (n3S10pc'=-3)&(n3S10ra'=10);
[] n3S10pc=10 -> (n3S10pc'=12);
[] n3S10pc=11 -> (n3S10opt'=2)&(n3S10pc'=-4)&(n3S10ra'=12);
[] numSteps<maxNumSteps & n3S10pc=12 -> (n3S10pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S12
n3S12t0:[0..1];
n3S12ip0:[1..3] init 1;
n3S12ip1:[1..3] init 1;
n3S12is:[0..2] init 0;
n3S12op0:[1..3] init 1;
n3S12op1:[1..3] init 1;
n3S12os:[0..2] init 0;
n3S12opt:[1..3] init 1;
n3S12pc:[-6..6] init 0; n3S12ra:[-6..6] init 0;
[] n3S12is<2 & n3S12pc=-1 -> (n3S12ip0'=1)&(n3S12ip1'=n3S12ip0)&(n3S12is'=n3S12is+1)&(n3S12pc'=n3S12ra);
[] n3S12is=2 & n3S12pc=-1 -> (n3S12pc'=n3S12ra);
[] n3S12is=0 & n3S12pc=-2 -> (n3S12pc'=n3S12ra);
[] n3S12is>0 & n3S12is<2 & n3S12pc=-2 -> (n3S12ip1'=n3S12ip0)&(n3S12is'=n3S12is+1)&(n3S12pc'=n3S12ra);
[] n3S12is=2 & n3S12pc=-2 -> (n3S12pc'=n3S12ra);
[] n3S12is=0 & n3S12pc=-3 -> (n3S12pc'=n3S12ra);
[] n3S12is>0 & n3S12pc=-3 -> (n3S12ip0'=n3S12ip1)&(n3S12is'=n3S12is-1)&(n3S12pc'=n3S12ra);
[] n3S12os=0 & n3S12pc=-4 -> (n3S12op0'=n3S12opt)&(n3S12os'=1)&(n3S12pc'=-3);
[] n3S12os=1 & n3S12pc=-4 -> (n3S12op1'=n3S12opt)&(n3S12os'=2)&(n3S12pc'=-3);
[] n3S12os=2 & n3S12pc=-4 -> (n3S12pc'=-3);
[n3S14f1] n3S12is=0 -> (n3S12ip0'=3)&(n3S12is'=1);
[n3S14f1] n3S12is=1 -> (n3S12ip1'=3)&(n3S12is'=2);
[n3S14f1] n3S12is=2 -> true;
[n3S13f1] n3S12is=0 -> (n3S12ip0'=2)&(n3S12is'=1);
[n3S13f1] n3S12is=1 -> (n3S12ip1'=2)&(n3S12is'=2);
[n3S13f1] n3S12is=2 -> true;
[n3S11f3] n3S12is=0 -> (n3S12ip0'=1)&(n3S12is'=1);
[n3S11f3] n3S12is=1 -> (n3S12ip1'=1)&(n3S12is'=2);
[n3S11f3] n3S12is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S12pc=0 & n3S12os>0 -> (n3S12pc'=-5)&(unlk'=false);
[n3S12f3] n3S12pc=-5 & n3S12os>0 & n3S12op0=3 -> (n3S12op0'=n3S12op1)&(n3S12os'=n3S12os-1)&(n3S12pc'=-6);
[n3S12f2] n3S12pc=-5 & n3S12os>0 & n3S12op0=2 -> (n3S12op0'=n3S12op1)&(n3S12os'=n3S12os-1)&(n3S12pc'=-6);
[n3S12f1] n3S12pc=-5 & n3S12os>0 & n3S12op0=1 -> (n3S12op0'=n3S12op1)&(n3S12os'=n3S12os-1)&(n3S12pc'=-6);
[] numSteps<maxNumSteps & n3S12pc=-6 -> (n3S12pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S12pc=0 & n3S12is>0 -> (n3S12pc'=1)&(unlk'=false);
[] n3S12pc=1 -> 0.5:(n3S12t0'=0)&(n3S12pc'=2) + 0.5:(n3S12t0'=1)&(n3S12pc'=2);
[] n3S12pc=2 & (n3S12t0=1) -> (n3S12pc'=3);
[] n3S12pc=2 & !((n3S12t0=1)) -> (n3S12pc'=5);
[] n3S12pc=3 -> (n3S12opt'=2)&(n3S12pc'=-4)&(n3S12ra'=4);
[] n3S12pc=4 -> (n3S12pc'=6);
[] n3S12pc=5 -> (n3S12opt'=3)&(n3S12pc'=-4)&(n3S12ra'=6);
[] numSteps<maxNumSteps & n3S12pc=6 -> (n3S12pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S21
n3S21ip0:[1..2] init 1;
n3S21ip1:[1..2] init 1;
n3S21is:[0..2] init 0;
n3S21op0:[1..2] init 1;
n3S21op1:[1..2] init 1;
n3S21os:[0..2] init 0;
n3S21opt:[1..2] init 1;
n3S21pc:[-6..2] init 0; n3S21ra:[-6..2] init 0;
[] n3S21is<2 & n3S21pc=-1 -> (n3S21ip0'=1)&(n3S21ip1'=n3S21ip0)&(n3S21is'=n3S21is+1)&(n3S21pc'=n3S21ra);
[] n3S21is=2 & n3S21pc=-1 -> (n3S21pc'=n3S21ra);
[] n3S21is=0 & n3S21pc=-2 -> (n3S21pc'=n3S21ra);
[] n3S21is>0 & n3S21is<2 & n3S21pc=-2 -> (n3S21ip1'=n3S21ip0)&(n3S21is'=n3S21is+1)&(n3S21pc'=n3S21ra);
[] n3S21is=2 & n3S21pc=-2 -> (n3S21pc'=n3S21ra);
[] n3S21is=0 & n3S21pc=-3 -> (n3S21pc'=n3S21ra);
[] n3S21is>0 & n3S21pc=-3 -> (n3S21ip0'=n3S21ip1)&(n3S21is'=n3S21is-1)&(n3S21pc'=n3S21ra);
[] n3S21os=0 & n3S21pc=-4 -> (n3S21op0'=n3S21opt)&(n3S21os'=1)&(n3S21pc'=-3);
[] n3S21os=1 & n3S21pc=-4 -> (n3S21op1'=n3S21opt)&(n3S21os'=2)&(n3S21pc'=-3);
[] n3S21os=2 & n3S21pc=-4 -> (n3S21pc'=-3);
[n3S23f1] n3S21is=0 -> (n3S21ip0'=2)&(n3S21is'=1);
[n3S23f1] n3S21is=1 -> (n3S21ip1'=2)&(n3S21is'=2);
[n3S23f1] n3S21is=2 -> true;
[n3S20f2] n3S21is=0 -> (n3S21ip0'=1)&(n3S21is'=1);
[n3S20f2] n3S21is=1 -> (n3S21ip1'=1)&(n3S21is'=2);
[n3S20f2] n3S21is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S21pc=0 & n3S21os>0 -> (n3S21pc'=-5)&(unlk'=false);
[n3S21f2] n3S21pc=-5 & n3S21os>0 & n3S21op0=2 -> (n3S21op0'=n3S21op1)&(n3S21os'=n3S21os-1)&(n3S21pc'=-6);
[n3S21f1] n3S21pc=-5 & n3S21os>0 & n3S21op0=1 -> (n3S21op0'=n3S21op1)&(n3S21os'=n3S21os-1)&(n3S21pc'=-6);
[] numSteps<maxNumSteps & n3S21pc=-6 -> (n3S21pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S21pc=0 & n3S21is>0 -> (n3S21pc'=1)&(unlk'=false);
[] n3S21pc=1 -> (n3S21opt'=2)&(n3S21pc'=-4)&(n3S21ra'=2);
[] numSteps<maxNumSteps & n3S21pc=2 -> (n3S21pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S1
n2S1ip0:[1..2] init 1;
n2S1ip1:[1..2] init 1;
n2S1is:[0..2] init 0;
n2S1op0:[1..2] init 1;
n2S1op1:[1..2] init 1;
n2S1os:[0..2] init 0;
n2S1opt:[1..2] init 1;
n2S1pc:[-6..2] init 0; n2S1ra:[-6..2] init 0;
[] n2S1is<2 & n2S1pc=-1 -> (n2S1ip0'=1)&(n2S1ip1'=n2S1ip0)&(n2S1is'=n2S1is+1)&(n2S1pc'=n2S1ra);
[] n2S1is=2 & n2S1pc=-1 -> (n2S1pc'=n2S1ra);
[] n2S1is=0 & n2S1pc=-2 -> (n2S1pc'=n2S1ra);
[] n2S1is>0 & n2S1is<2 & n2S1pc=-2 -> (n2S1ip1'=n2S1ip0)&(n2S1is'=n2S1is+1)&(n2S1pc'=n2S1ra);
[] n2S1is=2 & n2S1pc=-2 -> (n2S1pc'=n2S1ra);
[] n2S1is=0 & n2S1pc=-3 -> (n2S1pc'=n2S1ra);
[] n2S1is>0 & n2S1pc=-3 -> (n2S1ip0'=n2S1ip1)&(n2S1is'=n2S1is-1)&(n2S1pc'=n2S1ra);
[] n2S1os=0 & n2S1pc=-4 -> (n2S1op0'=n2S1opt)&(n2S1os'=1)&(n2S1pc'=-3);
[] n2S1os=1 & n2S1pc=-4 -> (n2S1op1'=n2S1opt)&(n2S1os'=2)&(n2S1pc'=-3);
[] n2S1os=2 & n2S1pc=-4 -> (n2S1pc'=-3);
[n2S3f1] n2S1is=0 -> (n2S1ip0'=2)&(n2S1is'=1);
[n2S3f1] n2S1is=1 -> (n2S1ip1'=2)&(n2S1is'=2);
[n2S3f1] n2S1is=2 -> true;
[n2S0f2] n2S1is=0 -> (n2S1ip0'=1)&(n2S1is'=1);
[n2S0f2] n2S1is=1 -> (n2S1ip1'=1)&(n2S1is'=2);
[n2S0f2] n2S1is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S1pc=0 & n2S1os>0 -> (n2S1pc'=-5)&(unlk'=false);
[n2S1f2] n2S1pc=-5 & n2S1os>0 & n2S1op0=2 -> (n2S1op0'=n2S1op1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[n2S1f1] n2S1pc=-5 & n2S1os>0 & n2S1op0=1 -> (n2S1op0'=n2S1op1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[] numSteps<maxNumSteps & n2S1pc=-6 -> (n2S1pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S1pc=0 & n2S1is>0 -> (n2S1pc'=1)&(unlk'=false);
[] n2S1pc=1 -> (n2S1opt'=2)&(n2S1pc'=-4)&(n2S1ra'=2);
[] numSteps<maxNumSteps & n2S1pc=2 -> (n2S1pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S3
n2S3ip0:[1..3] init 1;
n2S3ip1:[1..3] init 1;
n2S3is:[0..2] init 0;
n2S3op0:[1..3] init 1;
n2S3op1:[1..3] init 1;
n2S3os:[0..2] init 0;
n2S3opt:[1..3] init 1;
n2S3pc:[-6..2] init 0; n2S3ra:[-6..2] init 0;
[] n2S3is<2 & n2S3pc=-1 -> (n2S3ip0'=1)&(n2S3ip1'=n2S3ip0)&(n2S3is'=n2S3is+1)&(n2S3pc'=n2S3ra);
[] n2S3is=2 & n2S3pc=-1 -> (n2S3pc'=n2S3ra);
[] n2S3is=0 & n2S3pc=-2 -> (n2S3pc'=n2S3ra);
[] n2S3is>0 & n2S3is<2 & n2S3pc=-2 -> (n2S3ip1'=n2S3ip0)&(n2S3is'=n2S3is+1)&(n2S3pc'=n2S3ra);
[] n2S3is=2 & n2S3pc=-2 -> (n2S3pc'=n2S3ra);
[] n2S3is=0 & n2S3pc=-3 -> (n2S3pc'=n2S3ra);
[] n2S3is>0 & n2S3pc=-3 -> (n2S3ip0'=n2S3ip1)&(n2S3is'=n2S3is-1)&(n2S3pc'=n2S3ra);
[] n2S3os=0 & n2S3pc=-4 -> (n2S3op0'=n2S3opt)&(n2S3os'=1)&(n2S3pc'=-3);
[] n2S3os=1 & n2S3pc=-4 -> (n2S3op1'=n2S3opt)&(n2S3os'=2)&(n2S3pc'=-3);
[] n2S3os=2 & n2S3pc=-4 -> (n2S3pc'=-3);
[n2S4f1] n2S3is=0 -> (n2S3ip0'=3)&(n2S3is'=1);
[n2S4f1] n2S3is=1 -> (n2S3ip1'=3)&(n2S3is'=2);
[n2S4f1] n2S3is=2 -> true;
[n2S2f2] n2S3is=0 -> (n2S3ip0'=2)&(n2S3is'=1);
[n2S2f2] n2S3is=1 -> (n2S3ip1'=2)&(n2S3is'=2);
[n2S2f2] n2S3is=2 -> true;
[n2S1f2] n2S3is=0 -> (n2S3ip0'=1)&(n2S3is'=1);
[n2S1f2] n2S3is=1 -> (n2S3ip1'=1)&(n2S3is'=2);
[n2S1f2] n2S3is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S3pc=0 & n2S3os>0 -> (n2S3pc'=-5)&(unlk'=false);
[n2S3f3] n2S3pc=-5 & n2S3os>0 & n2S3op0=3 -> (n2S3op0'=n2S3op1)&(n2S3os'=n2S3os-1)&(n2S3pc'=-6);
[n2S3f2] n2S3pc=-5 & n2S3os>0 & n2S3op0=2 -> (n2S3op0'=n2S3op1)&(n2S3os'=n2S3os-1)&(n2S3pc'=-6);
[n2S3f1] n2S3pc=-5 & n2S3os>0 & n2S3op0=1 -> (n2S3op0'=n2S3op1)&(n2S3os'=n2S3os-1)&(n2S3pc'=-6);
[] numSteps<maxNumSteps & n2S3pc=-6 -> (n2S3pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S3pc=0 & n2S3is>0 -> (n2S3pc'=1)&(unlk'=false);
[] n2S3pc=1 -> (n2S3opt'=3)&(n2S3pc'=-4)&(n2S3ra'=2);
[] numSteps<maxNumSteps & n2S3pc=2 -> (n2S3pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S2
n2S2v7failing:[INTMIN..INTMAX] init 2;
n2S2t0:[0..1];
n2S2ip0:[1..2] init 1;
n2S2ip1:[1..2] init 1;
n2S2is:[0..2] init 0;
n2S2op0:[1..2] init 1;
n2S2op1:[1..2] init 1;
n2S2os:[0..2] init 0;
n2S2opt:[1..2] init 1;
n2S2pc:[-6..12] init 0; n2S2ra:[-6..12] init 0;
[] n2S2is<2 & n2S2pc=-1 -> (n2S2ip0'=1)&(n2S2ip1'=n2S2ip0)&(n2S2is'=n2S2is+1)&(n2S2pc'=n2S2ra);
[] n2S2is=2 & n2S2pc=-1 -> (n2S2pc'=n2S2ra);
[] n2S2is=0 & n2S2pc=-2 -> (n2S2pc'=n2S2ra);
[] n2S2is>0 & n2S2is<2 & n2S2pc=-2 -> (n2S2ip1'=n2S2ip0)&(n2S2is'=n2S2is+1)&(n2S2pc'=n2S2ra);
[] n2S2is=2 & n2S2pc=-2 -> (n2S2pc'=n2S2ra);
[] n2S2is=0 & n2S2pc=-3 -> (n2S2pc'=n2S2ra);
[] n2S2is>0 & n2S2pc=-3 -> (n2S2ip0'=n2S2ip1)&(n2S2is'=n2S2is-1)&(n2S2pc'=n2S2ra);
[] n2S2os=0 & n2S2pc=-4 -> (n2S2op0'=n2S2opt)&(n2S2os'=1)&(n2S2pc'=-3);
[] n2S2os=1 & n2S2pc=-4 -> (n2S2op1'=n2S2opt)&(n2S2os'=2)&(n2S2pc'=-3);
[] n2S2os=2 & n2S2pc=-4 -> (n2S2pc'=-3);
[n2S3f2] n2S2is=0 -> (n2S2ip0'=2)&(n2S2is'=1);
[n2S3f2] n2S2is=1 -> (n2S2ip1'=2)&(n2S2is'=2);
[n2S3f2] n2S2is=2 -> true;
[n2S0f3] n2S2is=0 -> (n2S2ip0'=1)&(n2S2is'=1);
[n2S0f3] n2S2is=1 -> (n2S2ip1'=1)&(n2S2is'=2);
[n2S0f3] n2S2is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S2pc=0 & n2S2os>0 -> (n2S2pc'=-5)&(unlk'=false);
[n2S2f2] n2S2pc=-5 & n2S2os>0 & n2S2op0=2 -> (n2S2op0'=n2S2op1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[n2S2f1] n2S2pc=-5 & n2S2os>0 & n2S2op0=1 -> (n2S2op0'=n2S2op1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[] numSteps<maxNumSteps & n2S2pc=-6 -> (n2S2pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S2pc=0 & n2S2is>0 -> (n2S2pc'=1)&(unlk'=false);
[] n2S2pc=1 & (n2S2v7failing=2) -> (n2S2pc'=2);
[] n2S2pc=1 & !((n2S2v7failing=2)) -> (n2S2pc'=8);
[] n2S2pc=2 -> 0.999:(n2S2t0'=0)&(n2S2pc'=3) + 0.001:(n2S2t0'=1)&(n2S2pc'=3);
[] n2S2pc=3 & (n2S2t0=1) -> (n2S2pc'=4);
[] n2S2pc=3 & !((n2S2t0=1)) -> (n2S2pc'=6);
[] n2S2pc=4 & 1>=INTMIN & 1<=INTMAX -> (n2S2v7failing'=1)&(n2S2pc'=5);
[] n2S2pc=5 -> (n2S2pc'=7);
[] n2S2pc=6 & 0>=INTMIN & 0<=INTMAX -> (n2S2v7failing'=0)&(n2S2pc'=7);
[] n2S2pc=7 -> (n2S2pc'=8);
[] n2S2pc=8 & (n2S2v7failing=1) -> (n2S2pc'=9);
[] n2S2pc=8 & !((n2S2v7failing=1)) -> (n2S2pc'=11);
[] n2S2pc=9 -> (n2S2pc'=-3)&(n2S2ra'=10);
[] n2S2pc=10 -> (n2S2pc'=12);
[] n2S2pc=11 -> (n2S2opt'=2)&(n2S2pc'=-4)&(n2S2ra'=12);
[] numSteps<maxNumSteps & n2S2pc=12 -> (n2S2pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S20
n3S20t0:[0..1];
n3S20ip0:[1..3] init 1;
n3S20ip1:[1..3] init 1;
n3S20is:[0..2] init 0;
n3S20op0:[1..3] init 1;
n3S20op1:[1..3] init 1;
n3S20os:[0..2] init 0;
n3S20opt:[1..3] init 1;
n3S20pc:[-6..6] init 0; n3S20ra:[-6..6] init 0;
[] n3S20is<2 & n3S20pc=-1 -> (n3S20ip0'=1)&(n3S20ip1'=n3S20ip0)&(n3S20is'=n3S20is+1)&(n3S20pc'=n3S20ra);
[] n3S20is=2 & n3S20pc=-1 -> (n3S20pc'=n3S20ra);
[] n3S20is=0 & n3S20pc=-2 -> (n3S20pc'=n3S20ra);
[] n3S20is>0 & n3S20is<2 & n3S20pc=-2 -> (n3S20ip1'=n3S20ip0)&(n3S20is'=n3S20is+1)&(n3S20pc'=n3S20ra);
[] n3S20is=2 & n3S20pc=-2 -> (n3S20pc'=n3S20ra);
[] n3S20is=0 & n3S20pc=-3 -> (n3S20pc'=n3S20ra);
[] n3S20is>0 & n3S20pc=-3 -> (n3S20ip0'=n3S20ip1)&(n3S20is'=n3S20is-1)&(n3S20pc'=n3S20ra);
[] n3S20os=0 & n3S20pc=-4 -> (n3S20op0'=n3S20opt)&(n3S20os'=1)&(n3S20pc'=-3);
[] n3S20os=1 & n3S20pc=-4 -> (n3S20op1'=n3S20opt)&(n3S20os'=2)&(n3S20pc'=-3);
[] n3S20os=2 & n3S20pc=-4 -> (n3S20pc'=-3);
[n3S22f1] n3S20is=0 -> (n3S20ip0'=3)&(n3S20is'=1);
[n3S22f1] n3S20is=1 -> (n3S20ip1'=3)&(n3S20is'=2);
[n3S22f1] n3S20is=2 -> true;
[n3S21f1] n3S20is=0 -> (n3S20ip0'=2)&(n3S20is'=1);
[n3S21f1] n3S20is=1 -> (n3S20ip1'=2)&(n3S20is'=2);
[n3S21f1] n3S20is=2 -> true;
[n3S19f3] n3S20is=0 -> (n3S20ip0'=1)&(n3S20is'=1);
[n3S19f3] n3S20is=1 -> (n3S20ip1'=1)&(n3S20is'=2);
[n3S19f3] n3S20is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S20pc=0 & n3S20os>0 -> (n3S20pc'=-5)&(unlk'=false);
[n3S20f3] n3S20pc=-5 & n3S20os>0 & n3S20op0=3 -> (n3S20op0'=n3S20op1)&(n3S20os'=n3S20os-1)&(n3S20pc'=-6);
[n3S20f2] n3S20pc=-5 & n3S20os>0 & n3S20op0=2 -> (n3S20op0'=n3S20op1)&(n3S20os'=n3S20os-1)&(n3S20pc'=-6);
[n3S20f1] n3S20pc=-5 & n3S20os>0 & n3S20op0=1 -> (n3S20op0'=n3S20op1)&(n3S20os'=n3S20os-1)&(n3S20pc'=-6);
[] numSteps<maxNumSteps & n3S20pc=-6 -> (n3S20pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S20pc=0 & n3S20is>0 -> (n3S20pc'=1)&(unlk'=false);
[] n3S20pc=1 -> 0.5:(n3S20t0'=0)&(n3S20pc'=2) + 0.5:(n3S20t0'=1)&(n3S20pc'=2);
[] n3S20pc=2 & (n3S20t0=1) -> (n3S20pc'=3);
[] n3S20pc=2 & !((n3S20t0=1)) -> (n3S20pc'=5);
[] n3S20pc=3 -> (n3S20opt'=2)&(n3S20pc'=-4)&(n3S20ra'=4);
[] n3S20pc=4 -> (n3S20pc'=6);
[] n3S20pc=5 -> (n3S20opt'=3)&(n3S20pc'=-4)&(n3S20ra'=6);
[] numSteps<maxNumSteps & n3S20pc=6 -> (n3S20pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S18
n3S18v7failing:[INTMIN..INTMAX] init 2;
n3S18t0:[0..1];
n3S18ip0:[1..2] init 1;
n3S18ip1:[1..2] init 1;
n3S18is:[0..2] init 0;
n3S18op0:[1..2] init 1;
n3S18op1:[1..2] init 1;
n3S18os:[0..2] init 0;
n3S18opt:[1..2] init 1;
n3S18pc:[-6..12] init 0; n3S18ra:[-6..12] init 0;
[] n3S18is<2 & n3S18pc=-1 -> (n3S18ip0'=1)&(n3S18ip1'=n3S18ip0)&(n3S18is'=n3S18is+1)&(n3S18pc'=n3S18ra);
[] n3S18is=2 & n3S18pc=-1 -> (n3S18pc'=n3S18ra);
[] n3S18is=0 & n3S18pc=-2 -> (n3S18pc'=n3S18ra);
[] n3S18is>0 & n3S18is<2 & n3S18pc=-2 -> (n3S18ip1'=n3S18ip0)&(n3S18is'=n3S18is+1)&(n3S18pc'=n3S18ra);
[] n3S18is=2 & n3S18pc=-2 -> (n3S18pc'=n3S18ra);
[] n3S18is=0 & n3S18pc=-3 -> (n3S18pc'=n3S18ra);
[] n3S18is>0 & n3S18pc=-3 -> (n3S18ip0'=n3S18ip1)&(n3S18is'=n3S18is-1)&(n3S18pc'=n3S18ra);
[] n3S18os=0 & n3S18pc=-4 -> (n3S18op0'=n3S18opt)&(n3S18os'=1)&(n3S18pc'=-3);
[] n3S18os=1 & n3S18pc=-4 -> (n3S18op1'=n3S18opt)&(n3S18os'=2)&(n3S18pc'=-3);
[] n3S18os=2 & n3S18pc=-4 -> (n3S18pc'=-3);
[n3S19f2] n3S18is=0 -> (n3S18ip0'=2)&(n3S18is'=1);
[n3S19f2] n3S18is=1 -> (n3S18ip1'=2)&(n3S18is'=2);
[n3S19f2] n3S18is=2 -> true;
[n3S16f3] n3S18is=0 -> (n3S18ip0'=1)&(n3S18is'=1);
[n3S16f3] n3S18is=1 -> (n3S18ip1'=1)&(n3S18is'=2);
[n3S16f3] n3S18is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S18pc=0 & n3S18os>0 -> (n3S18pc'=-5)&(unlk'=false);
[n3S18f2] n3S18pc=-5 & n3S18os>0 & n3S18op0=2 -> (n3S18op0'=n3S18op1)&(n3S18os'=n3S18os-1)&(n3S18pc'=-6);
[n3S18f1] n3S18pc=-5 & n3S18os>0 & n3S18op0=1 -> (n3S18op0'=n3S18op1)&(n3S18os'=n3S18os-1)&(n3S18pc'=-6);
[] numSteps<maxNumSteps & n3S18pc=-6 -> (n3S18pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S18pc=0 & n3S18is>0 -> (n3S18pc'=1)&(unlk'=false);
[] n3S18pc=1 & (n3S18v7failing=2) -> (n3S18pc'=2);
[] n3S18pc=1 & !((n3S18v7failing=2)) -> (n3S18pc'=8);
[] n3S18pc=2 -> 0.999:(n3S18t0'=0)&(n3S18pc'=3) + 0.001:(n3S18t0'=1)&(n3S18pc'=3);
[] n3S18pc=3 & (n3S18t0=1) -> (n3S18pc'=4);
[] n3S18pc=3 & !((n3S18t0=1)) -> (n3S18pc'=6);
[] n3S18pc=4 & 1>=INTMIN & 1<=INTMAX -> (n3S18v7failing'=1)&(n3S18pc'=5);
[] n3S18pc=5 -> (n3S18pc'=7);
[] n3S18pc=6 & 0>=INTMIN & 0<=INTMAX -> (n3S18v7failing'=0)&(n3S18pc'=7);
[] n3S18pc=7 -> (n3S18pc'=8);
[] n3S18pc=8 & (n3S18v7failing=1) -> (n3S18pc'=9);
[] n3S18pc=8 & !((n3S18v7failing=1)) -> (n3S18pc'=11);
[] n3S18pc=9 -> (n3S18pc'=-3)&(n3S18ra'=10);
[] n3S18pc=10 -> (n3S18pc'=12);
[] n3S18pc=11 -> (n3S18opt'=2)&(n3S18pc'=-4)&(n3S18ra'=12);
[] numSteps<maxNumSteps & n3S18pc=12 -> (n3S18pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S5
n2S5ip0:[1..2] init 1;
n2S5ip1:[1..2] init 1;
n2S5is:[0..2] init 0;
n2S5op0:[1..2] init 1;
n2S5op1:[1..2] init 1;
n2S5os:[0..2] init 0;
n2S5opt:[1..2] init 1;
n2S5pc:[-6..2] init 0; n2S5ra:[-6..2] init 0;
[] n2S5is<2 & n2S5pc=-1 -> (n2S5ip0'=1)&(n2S5ip1'=n2S5ip0)&(n2S5is'=n2S5is+1)&(n2S5pc'=n2S5ra);
[] n2S5is=2 & n2S5pc=-1 -> (n2S5pc'=n2S5ra);
[] n2S5is=0 & n2S5pc=-2 -> (n2S5pc'=n2S5ra);
[] n2S5is>0 & n2S5is<2 & n2S5pc=-2 -> (n2S5ip1'=n2S5ip0)&(n2S5is'=n2S5is+1)&(n2S5pc'=n2S5ra);
[] n2S5is=2 & n2S5pc=-2 -> (n2S5pc'=n2S5ra);
[] n2S5is=0 & n2S5pc=-3 -> (n2S5pc'=n2S5ra);
[] n2S5is>0 & n2S5pc=-3 -> (n2S5ip0'=n2S5ip1)&(n2S5is'=n2S5is-1)&(n2S5pc'=n2S5ra);
[] n2S5os=0 & n2S5pc=-4 -> (n2S5op0'=n2S5opt)&(n2S5os'=1)&(n2S5pc'=-3);
[] n2S5os=1 & n2S5pc=-4 -> (n2S5op1'=n2S5opt)&(n2S5os'=2)&(n2S5pc'=-3);
[] n2S5os=2 & n2S5pc=-4 -> (n2S5pc'=-3);
[n2S7f1] n2S5is=0 -> (n2S5ip0'=2)&(n2S5is'=1);
[n2S7f1] n2S5is=1 -> (n2S5ip1'=2)&(n2S5is'=2);
[n2S7f1] n2S5is=2 -> true;
[n2S4f2] n2S5is=0 -> (n2S5ip0'=1)&(n2S5is'=1);
[n2S4f2] n2S5is=1 -> (n2S5ip1'=1)&(n2S5is'=2);
[n2S4f2] n2S5is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S5pc=0 & n2S5os>0 -> (n2S5pc'=-5)&(unlk'=false);
[n2S5f2] n2S5pc=-5 & n2S5os>0 & n2S5op0=2 -> (n2S5op0'=n2S5op1)&(n2S5os'=n2S5os-1)&(n2S5pc'=-6);
[n2S5f1] n2S5pc=-5 & n2S5os>0 & n2S5op0=1 -> (n2S5op0'=n2S5op1)&(n2S5os'=n2S5os-1)&(n2S5pc'=-6);
[] numSteps<maxNumSteps & n2S5pc=-6 -> (n2S5pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S5pc=0 & n2S5is>0 -> (n2S5pc'=1)&(unlk'=false);
[] n2S5pc=1 -> (n2S5opt'=2)&(n2S5pc'=-4)&(n2S5ra'=2);
[] numSteps<maxNumSteps & n2S5pc=2 -> (n2S5pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S0
n2S0t0:[0..1];
n2S0ip0:[1..3] init 1;
n2S0ip1:[1..3] init 1;
n2S0is:[0..2] init 0;
n2S0op0:[1..3] init 1;
n2S0op1:[1..3] init 1;
n2S0os:[0..2] init 0;
n2S0opt:[1..3] init 1;
n2S0pc:[-6..6] init 0; n2S0ra:[-6..6] init 0;
[] n2S0is<2 & n2S0pc=-1 -> (n2S0ip0'=1)&(n2S0ip1'=n2S0ip0)&(n2S0is'=n2S0is+1)&(n2S0pc'=n2S0ra);
[] n2S0is=2 & n2S0pc=-1 -> (n2S0pc'=n2S0ra);
[] n2S0is=0 & n2S0pc=-2 -> (n2S0pc'=n2S0ra);
[] n2S0is>0 & n2S0is<2 & n2S0pc=-2 -> (n2S0ip1'=n2S0ip0)&(n2S0is'=n2S0is+1)&(n2S0pc'=n2S0ra);
[] n2S0is=2 & n2S0pc=-2 -> (n2S0pc'=n2S0ra);
[] n2S0is=0 & n2S0pc=-3 -> (n2S0pc'=n2S0ra);
[] n2S0is>0 & n2S0pc=-3 -> (n2S0ip0'=n2S0ip1)&(n2S0is'=n2S0is-1)&(n2S0pc'=n2S0ra);
[] n2S0os=0 & n2S0pc=-4 -> (n2S0op0'=n2S0opt)&(n2S0os'=1)&(n2S0pc'=-3);
[] n2S0os=1 & n2S0pc=-4 -> (n2S0op1'=n2S0opt)&(n2S0os'=2)&(n2S0pc'=-3);
[] n2S0os=2 & n2S0pc=-4 -> (n2S0pc'=-3);
[n2S2f1] n2S0is=0 -> (n2S0ip0'=3)&(n2S0is'=1);
[n2S2f1] n2S0is=1 -> (n2S0ip1'=3)&(n2S0is'=2);
[n2S2f1] n2S0is=2 -> true;
[n2S1f1] n2S0is=0 -> (n2S0ip0'=2)&(n2S0is'=1);
[n2S1f1] n2S0is=1 -> (n2S0ip1'=2)&(n2S0is'=2);
[n2S1f1] n2S0is=2 -> true;
[n2H0f1] n2S0is=0 -> (n2S0ip0'=1)&(n2S0is'=1);
[n2H0f1] n2S0is=1 -> (n2S0ip1'=1)&(n2S0is'=2);
[n2H0f1] n2S0is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S0pc=0 & n2S0os>0 -> (n2S0pc'=-5)&(unlk'=false);
[n2S0f3] n2S0pc=-5 & n2S0os>0 & n2S0op0=3 -> (n2S0op0'=n2S0op1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f2] n2S0pc=-5 & n2S0os>0 & n2S0op0=2 -> (n2S0op0'=n2S0op1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f1] n2S0pc=-5 & n2S0os>0 & n2S0op0=1 -> (n2S0op0'=n2S0op1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[] numSteps<maxNumSteps & n2S0pc=-6 -> (n2S0pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S0pc=0 & n2S0is>0 -> (n2S0pc'=1)&(unlk'=false);
[] n2S0pc=1 -> 0.5:(n2S0t0'=0)&(n2S0pc'=2) + 0.5:(n2S0t0'=1)&(n2S0pc'=2);
[] n2S0pc=2 & (n2S0t0=1) -> (n2S0pc'=3);
[] n2S0pc=2 & !((n2S0t0=1)) -> (n2S0pc'=5);
[] n2S0pc=3 -> (n2S0opt'=2)&(n2S0pc'=-4)&(n2S0ra'=4);
[] n2S0pc=4 -> (n2S0pc'=6);
[] n2S0pc=5 -> (n2S0opt'=3)&(n2S0pc'=-4)&(n2S0ra'=6);
[] numSteps<maxNumSteps & n2S0pc=6 -> (n2S0pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S9
n2S9ip0:[1..2] init 1;
n2S9ip1:[1..2] init 1;
n2S9is:[0..2] init 0;
n2S9op0:[1..2] init 1;
n2S9op1:[1..2] init 1;
n2S9os:[0..2] init 0;
n2S9opt:[1..2] init 1;
n2S9pc:[-6..2] init 0; n2S9ra:[-6..2] init 0;
[] n2S9is<2 & n2S9pc=-1 -> (n2S9ip0'=1)&(n2S9ip1'=n2S9ip0)&(n2S9is'=n2S9is+1)&(n2S9pc'=n2S9ra);
[] n2S9is=2 & n2S9pc=-1 -> (n2S9pc'=n2S9ra);
[] n2S9is=0 & n2S9pc=-2 -> (n2S9pc'=n2S9ra);
[] n2S9is>0 & n2S9is<2 & n2S9pc=-2 -> (n2S9ip1'=n2S9ip0)&(n2S9is'=n2S9is+1)&(n2S9pc'=n2S9ra);
[] n2S9is=2 & n2S9pc=-2 -> (n2S9pc'=n2S9ra);
[] n2S9is=0 & n2S9pc=-3 -> (n2S9pc'=n2S9ra);
[] n2S9is>0 & n2S9pc=-3 -> (n2S9ip0'=n2S9ip1)&(n2S9is'=n2S9is-1)&(n2S9pc'=n2S9ra);
[] n2S9os=0 & n2S9pc=-4 -> (n2S9op0'=n2S9opt)&(n2S9os'=1)&(n2S9pc'=-3);
[] n2S9os=1 & n2S9pc=-4 -> (n2S9op1'=n2S9opt)&(n2S9os'=2)&(n2S9pc'=-3);
[] n2S9os=2 & n2S9pc=-4 -> (n2S9pc'=-3);
[n3S11f1] n2S9is=0 -> (n2S9ip0'=2)&(n2S9is'=1);
[n3S11f1] n2S9is=1 -> (n2S9ip1'=2)&(n2S9is'=2);
[n3S11f1] n2S9is=2 -> true;
[n2S8f2] n2S9is=0 -> (n2S9ip0'=1)&(n2S9is'=1);
[n2S8f2] n2S9is=1 -> (n2S9ip1'=1)&(n2S9is'=2);
[n2S8f2] n2S9is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S9pc=0 & n2S9os>0 -> (n2S9pc'=-5)&(unlk'=false);
[n2S9f2] n2S9pc=-5 & n2S9os>0 & n2S9op0=2 -> (n2S9op0'=n2S9op1)&(n2S9os'=n2S9os-1)&(n2S9pc'=-6);
[n2S9f1] n2S9pc=-5 & n2S9os>0 & n2S9op0=1 -> (n2S9op0'=n2S9op1)&(n2S9os'=n2S9os-1)&(n2S9pc'=-6);
[] numSteps<maxNumSteps & n2S9pc=-6 -> (n2S9pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S9pc=0 & n2S9is>0 -> (n2S9pc'=1)&(unlk'=false);
[] n2S9pc=1 -> (n2S9opt'=2)&(n2S9pc'=-4)&(n2S9ra'=2);
[] numSteps<maxNumSteps & n2S9pc=2 -> (n2S9pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S27
n3S27ip0:[1..3] init 1;
n3S27ip1:[1..3] init 1;
n3S27is:[0..2] init 0;
n3S27op0:[1..3] init 1;
n3S27op1:[1..3] init 1;
n3S27os:[0..2] init 0;
n3S27opt:[1..3] init 1;
n3S27pc:[-6..2] init 0; n3S27ra:[-6..2] init 0;
[] n3S27is<2 & n3S27pc=-1 -> (n3S27ip0'=1)&(n3S27ip1'=n3S27ip0)&(n3S27is'=n3S27is+1)&(n3S27pc'=n3S27ra);
[] n3S27is=2 & n3S27pc=-1 -> (n3S27pc'=n3S27ra);
[] n3S27is=0 & n3S27pc=-2 -> (n3S27pc'=n3S27ra);
[] n3S27is>0 & n3S27is<2 & n3S27pc=-2 -> (n3S27ip1'=n3S27ip0)&(n3S27is'=n3S27is+1)&(n3S27pc'=n3S27ra);
[] n3S27is=2 & n3S27pc=-2 -> (n3S27pc'=n3S27ra);
[] n3S27is=0 & n3S27pc=-3 -> (n3S27pc'=n3S27ra);
[] n3S27is>0 & n3S27pc=-3 -> (n3S27ip0'=n3S27ip1)&(n3S27is'=n3S27is-1)&(n3S27pc'=n3S27ra);
[] n3S27os=0 & n3S27pc=-4 -> (n3S27op0'=n3S27opt)&(n3S27os'=1)&(n3S27pc'=-3);
[] n3S27os=1 & n3S27pc=-4 -> (n3S27op1'=n3S27opt)&(n3S27os'=2)&(n3S27pc'=-3);
[] n3S27os=2 & n3S27pc=-4 -> (n3S27pc'=-3);
[n2H1f1] n3S27is=0 -> (n3S27ip0'=3)&(n3S27is'=1);
[n2H1f1] n3S27is=1 -> (n3S27ip1'=3)&(n3S27is'=2);
[n2H1f1] n3S27is=2 -> true;
[n3S26f2] n3S27is=0 -> (n3S27ip0'=2)&(n3S27is'=1);
[n3S26f2] n3S27is=1 -> (n3S27ip1'=2)&(n3S27is'=2);
[n3S26f2] n3S27is=2 -> true;
[n3S25f2] n3S27is=0 -> (n3S27ip0'=1)&(n3S27is'=1);
[n3S25f2] n3S27is=1 -> (n3S27ip1'=1)&(n3S27is'=2);
[n3S25f2] n3S27is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S27pc=0 & n3S27os>0 -> (n3S27pc'=-5)&(unlk'=false);
[n3S27f3] n3S27pc=-5 & n3S27os>0 & n3S27op0=3 -> (n3S27op0'=n3S27op1)&(n3S27os'=n3S27os-1)&(n3S27pc'=-6);
[n3S27f2] n3S27pc=-5 & n3S27os>0 & n3S27op0=2 -> (n3S27op0'=n3S27op1)&(n3S27os'=n3S27os-1)&(n3S27pc'=-6);
[n3S27f1] n3S27pc=-5 & n3S27os>0 & n3S27op0=1 -> (n3S27op0'=n3S27op1)&(n3S27os'=n3S27os-1)&(n3S27pc'=-6);
[] numSteps<maxNumSteps & n3S27pc=-6 -> (n3S27pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S27pc=0 & n3S27is>0 -> (n3S27pc'=1)&(unlk'=false);
[] n3S27pc=1 -> (n3S27opt'=3)&(n3S27pc'=-4)&(n3S27ra'=2);
[] numSteps<maxNumSteps & n3S27pc=2 -> (n3S27pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S14
n3S14v7failing:[INTMIN..INTMAX] init 2;
n3S14t0:[0..1];
n3S14ip0:[1..2] init 1;
n3S14ip1:[1..2] init 1;
n3S14is:[0..2] init 0;
n3S14op0:[1..2] init 1;
n3S14op1:[1..2] init 1;
n3S14os:[0..2] init 0;
n3S14opt:[1..2] init 1;
n3S14pc:[-6..12] init 0; n3S14ra:[-6..12] init 0;
[] n3S14is<2 & n3S14pc=-1 -> (n3S14ip0'=1)&(n3S14ip1'=n3S14ip0)&(n3S14is'=n3S14is+1)&(n3S14pc'=n3S14ra);
[] n3S14is=2 & n3S14pc=-1 -> (n3S14pc'=n3S14ra);
[] n3S14is=0 & n3S14pc=-2 -> (n3S14pc'=n3S14ra);
[] n3S14is>0 & n3S14is<2 & n3S14pc=-2 -> (n3S14ip1'=n3S14ip0)&(n3S14is'=n3S14is+1)&(n3S14pc'=n3S14ra);
[] n3S14is=2 & n3S14pc=-2 -> (n3S14pc'=n3S14ra);
[] n3S14is=0 & n3S14pc=-3 -> (n3S14pc'=n3S14ra);
[] n3S14is>0 & n3S14pc=-3 -> (n3S14ip0'=n3S14ip1)&(n3S14is'=n3S14is-1)&(n3S14pc'=n3S14ra);
[] n3S14os=0 & n3S14pc=-4 -> (n3S14op0'=n3S14opt)&(n3S14os'=1)&(n3S14pc'=-3);
[] n3S14os=1 & n3S14pc=-4 -> (n3S14op1'=n3S14opt)&(n3S14os'=2)&(n3S14pc'=-3);
[] n3S14os=2 & n3S14pc=-4 -> (n3S14pc'=-3);
[n3S15f2] n3S14is=0 -> (n3S14ip0'=2)&(n3S14is'=1);
[n3S15f2] n3S14is=1 -> (n3S14ip1'=2)&(n3S14is'=2);
[n3S15f2] n3S14is=2 -> true;
[n3S12f3] n3S14is=0 -> (n3S14ip0'=1)&(n3S14is'=1);
[n3S12f3] n3S14is=1 -> (n3S14ip1'=1)&(n3S14is'=2);
[n3S12f3] n3S14is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S14pc=0 & n3S14os>0 -> (n3S14pc'=-5)&(unlk'=false);
[n3S14f2] n3S14pc=-5 & n3S14os>0 & n3S14op0=2 -> (n3S14op0'=n3S14op1)&(n3S14os'=n3S14os-1)&(n3S14pc'=-6);
[n3S14f1] n3S14pc=-5 & n3S14os>0 & n3S14op0=1 -> (n3S14op0'=n3S14op1)&(n3S14os'=n3S14os-1)&(n3S14pc'=-6);
[] numSteps<maxNumSteps & n3S14pc=-6 -> (n3S14pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S14pc=0 & n3S14is>0 -> (n3S14pc'=1)&(unlk'=false);
[] n3S14pc=1 & (n3S14v7failing=2) -> (n3S14pc'=2);
[] n3S14pc=1 & !((n3S14v7failing=2)) -> (n3S14pc'=8);
[] n3S14pc=2 -> 0.999:(n3S14t0'=0)&(n3S14pc'=3) + 0.001:(n3S14t0'=1)&(n3S14pc'=3);
[] n3S14pc=3 & (n3S14t0=1) -> (n3S14pc'=4);
[] n3S14pc=3 & !((n3S14t0=1)) -> (n3S14pc'=6);
[] n3S14pc=4 & 1>=INTMIN & 1<=INTMAX -> (n3S14v7failing'=1)&(n3S14pc'=5);
[] n3S14pc=5 -> (n3S14pc'=7);
[] n3S14pc=6 & 0>=INTMIN & 0<=INTMAX -> (n3S14v7failing'=0)&(n3S14pc'=7);
[] n3S14pc=7 -> (n3S14pc'=8);
[] n3S14pc=8 & (n3S14v7failing=1) -> (n3S14pc'=9);
[] n3S14pc=8 & !((n3S14v7failing=1)) -> (n3S14pc'=11);
[] n3S14pc=9 -> (n3S14pc'=-3)&(n3S14ra'=10);
[] n3S14pc=10 -> (n3S14pc'=12);
[] n3S14pc=11 -> (n3S14opt'=2)&(n3S14pc'=-4)&(n3S14ra'=12);
[] numSteps<maxNumSteps & n3S14pc=12 -> (n3S14pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S25
n3S25ip0:[1..2] init 1;
n3S25ip1:[1..2] init 1;
n3S25is:[0..2] init 0;
n3S25op0:[1..2] init 1;
n3S25op1:[1..2] init 1;
n3S25os:[0..2] init 0;
n3S25opt:[1..2] init 1;
n3S25pc:[-6..2] init 0; n3S25ra:[-6..2] init 0;
[] n3S25is<2 & n3S25pc=-1 -> (n3S25ip0'=1)&(n3S25ip1'=n3S25ip0)&(n3S25is'=n3S25is+1)&(n3S25pc'=n3S25ra);
[] n3S25is=2 & n3S25pc=-1 -> (n3S25pc'=n3S25ra);
[] n3S25is=0 & n3S25pc=-2 -> (n3S25pc'=n3S25ra);
[] n3S25is>0 & n3S25is<2 & n3S25pc=-2 -> (n3S25ip1'=n3S25ip0)&(n3S25is'=n3S25is+1)&(n3S25pc'=n3S25ra);
[] n3S25is=2 & n3S25pc=-2 -> (n3S25pc'=n3S25ra);
[] n3S25is=0 & n3S25pc=-3 -> (n3S25pc'=n3S25ra);
[] n3S25is>0 & n3S25pc=-3 -> (n3S25ip0'=n3S25ip1)&(n3S25is'=n3S25is-1)&(n3S25pc'=n3S25ra);
[] n3S25os=0 & n3S25pc=-4 -> (n3S25op0'=n3S25opt)&(n3S25os'=1)&(n3S25pc'=-3);
[] n3S25os=1 & n3S25pc=-4 -> (n3S25op1'=n3S25opt)&(n3S25os'=2)&(n3S25pc'=-3);
[] n3S25os=2 & n3S25pc=-4 -> (n3S25pc'=-3);
[n3S27f1] n3S25is=0 -> (n3S25ip0'=2)&(n3S25is'=1);
[n3S27f1] n3S25is=1 -> (n3S25ip1'=2)&(n3S25is'=2);
[n3S27f1] n3S25is=2 -> true;
[n3S24f2] n3S25is=0 -> (n3S25ip0'=1)&(n3S25is'=1);
[n3S24f2] n3S25is=1 -> (n3S25ip1'=1)&(n3S25is'=2);
[n3S24f2] n3S25is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S25pc=0 & n3S25os>0 -> (n3S25pc'=-5)&(unlk'=false);
[n3S25f2] n3S25pc=-5 & n3S25os>0 & n3S25op0=2 -> (n3S25op0'=n3S25op1)&(n3S25os'=n3S25os-1)&(n3S25pc'=-6);
[n3S25f1] n3S25pc=-5 & n3S25os>0 & n3S25op0=1 -> (n3S25op0'=n3S25op1)&(n3S25os'=n3S25os-1)&(n3S25pc'=-6);
[] numSteps<maxNumSteps & n3S25pc=-6 -> (n3S25pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S25pc=0 & n3S25is>0 -> (n3S25pc'=1)&(unlk'=false);
[] n3S25pc=1 -> (n3S25opt'=2)&(n3S25pc'=-4)&(n3S25ra'=2);
[] numSteps<maxNumSteps & n3S25pc=2 -> (n3S25pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S23
n3S23ip0:[1..3] init 1;
n3S23ip1:[1..3] init 1;
n3S23is:[0..2] init 0;
n3S23op0:[1..3] init 1;
n3S23op1:[1..3] init 1;
n3S23os:[0..2] init 0;
n3S23opt:[1..3] init 1;
n3S23pc:[-6..2] init 0; n3S23ra:[-6..2] init 0;
[] n3S23is<2 & n3S23pc=-1 -> (n3S23ip0'=1)&(n3S23ip1'=n3S23ip0)&(n3S23is'=n3S23is+1)&(n3S23pc'=n3S23ra);
[] n3S23is=2 & n3S23pc=-1 -> (n3S23pc'=n3S23ra);
[] n3S23is=0 & n3S23pc=-2 -> (n3S23pc'=n3S23ra);
[] n3S23is>0 & n3S23is<2 & n3S23pc=-2 -> (n3S23ip1'=n3S23ip0)&(n3S23is'=n3S23is+1)&(n3S23pc'=n3S23ra);
[] n3S23is=2 & n3S23pc=-2 -> (n3S23pc'=n3S23ra);
[] n3S23is=0 & n3S23pc=-3 -> (n3S23pc'=n3S23ra);
[] n3S23is>0 & n3S23pc=-3 -> (n3S23ip0'=n3S23ip1)&(n3S23is'=n3S23is-1)&(n3S23pc'=n3S23ra);
[] n3S23os=0 & n3S23pc=-4 -> (n3S23op0'=n3S23opt)&(n3S23os'=1)&(n3S23pc'=-3);
[] n3S23os=1 & n3S23pc=-4 -> (n3S23op1'=n3S23opt)&(n3S23os'=2)&(n3S23pc'=-3);
[] n3S23os=2 & n3S23pc=-4 -> (n3S23pc'=-3);
[n3S24f1] n3S23is=0 -> (n3S23ip0'=3)&(n3S23is'=1);
[n3S24f1] n3S23is=1 -> (n3S23ip1'=3)&(n3S23is'=2);
[n3S24f1] n3S23is=2 -> true;
[n3S22f2] n3S23is=0 -> (n3S23ip0'=2)&(n3S23is'=1);
[n3S22f2] n3S23is=1 -> (n3S23ip1'=2)&(n3S23is'=2);
[n3S22f2] n3S23is=2 -> true;
[n3S21f2] n3S23is=0 -> (n3S23ip0'=1)&(n3S23is'=1);
[n3S21f2] n3S23is=1 -> (n3S23ip1'=1)&(n3S23is'=2);
[n3S21f2] n3S23is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S23pc=0 & n3S23os>0 -> (n3S23pc'=-5)&(unlk'=false);
[n3S23f3] n3S23pc=-5 & n3S23os>0 & n3S23op0=3 -> (n3S23op0'=n3S23op1)&(n3S23os'=n3S23os-1)&(n3S23pc'=-6);
[n3S23f2] n3S23pc=-5 & n3S23os>0 & n3S23op0=2 -> (n3S23op0'=n3S23op1)&(n3S23os'=n3S23os-1)&(n3S23pc'=-6);
[n3S23f1] n3S23pc=-5 & n3S23os>0 & n3S23op0=1 -> (n3S23op0'=n3S23op1)&(n3S23os'=n3S23os-1)&(n3S23pc'=-6);
[] numSteps<maxNumSteps & n3S23pc=-6 -> (n3S23pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S23pc=0 & n3S23is>0 -> (n3S23pc'=1)&(unlk'=false);
[] n3S23pc=1 -> (n3S23opt'=3)&(n3S23pc'=-4)&(n3S23ra'=2);
[] numSteps<maxNumSteps & n3S23pc=2 -> (n3S23pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n3S16
n3S16t0:[0..1];
n3S16ip0:[1..3] init 1;
n3S16ip1:[1..3] init 1;
n3S16is:[0..2] init 0;
n3S16op0:[1..3] init 1;
n3S16op1:[1..3] init 1;
n3S16os:[0..2] init 0;
n3S16opt:[1..3] init 1;
n3S16pc:[-6..6] init 0; n3S16ra:[-6..6] init 0;
[] n3S16is<2 & n3S16pc=-1 -> (n3S16ip0'=1)&(n3S16ip1'=n3S16ip0)&(n3S16is'=n3S16is+1)&(n3S16pc'=n3S16ra);
[] n3S16is=2 & n3S16pc=-1 -> (n3S16pc'=n3S16ra);
[] n3S16is=0 & n3S16pc=-2 -> (n3S16pc'=n3S16ra);
[] n3S16is>0 & n3S16is<2 & n3S16pc=-2 -> (n3S16ip1'=n3S16ip0)&(n3S16is'=n3S16is+1)&(n3S16pc'=n3S16ra);
[] n3S16is=2 & n3S16pc=-2 -> (n3S16pc'=n3S16ra);
[] n3S16is=0 & n3S16pc=-3 -> (n3S16pc'=n3S16ra);
[] n3S16is>0 & n3S16pc=-3 -> (n3S16ip0'=n3S16ip1)&(n3S16is'=n3S16is-1)&(n3S16pc'=n3S16ra);
[] n3S16os=0 & n3S16pc=-4 -> (n3S16op0'=n3S16opt)&(n3S16os'=1)&(n3S16pc'=-3);
[] n3S16os=1 & n3S16pc=-4 -> (n3S16op1'=n3S16opt)&(n3S16os'=2)&(n3S16pc'=-3);
[] n3S16os=2 & n3S16pc=-4 -> (n3S16pc'=-3);
[n3S18f1] n3S16is=0 -> (n3S16ip0'=3)&(n3S16is'=1);
[n3S18f1] n3S16is=1 -> (n3S16ip1'=3)&(n3S16is'=2);
[n3S18f1] n3S16is=2 -> true;
[n3S17f1] n3S16is=0 -> (n3S16ip0'=2)&(n3S16is'=1);
[n3S17f1] n3S16is=1 -> (n3S16ip1'=2)&(n3S16is'=2);
[n3S17f1] n3S16is=2 -> true;
[n3S15f3] n3S16is=0 -> (n3S16ip0'=1)&(n3S16is'=1);
[n3S15f3] n3S16is=1 -> (n3S16ip1'=1)&(n3S16is'=2);
[n3S15f3] n3S16is=2 -> true;
[] unlk & numSteps<maxNumSteps & n3S16pc=0 & n3S16os>0 -> (n3S16pc'=-5)&(unlk'=false);
[n3S16f3] n3S16pc=-5 & n3S16os>0 & n3S16op0=3 -> (n3S16op0'=n3S16op1)&(n3S16os'=n3S16os-1)&(n3S16pc'=-6);
[n3S16f2] n3S16pc=-5 & n3S16os>0 & n3S16op0=2 -> (n3S16op0'=n3S16op1)&(n3S16os'=n3S16os-1)&(n3S16pc'=-6);
[n3S16f1] n3S16pc=-5 & n3S16os>0 & n3S16op0=1 -> (n3S16op0'=n3S16op1)&(n3S16os'=n3S16os-1)&(n3S16pc'=-6);
[] numSteps<maxNumSteps & n3S16pc=-6 -> (n3S16pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n3S16pc=0 & n3S16is>0 -> (n3S16pc'=1)&(unlk'=false);
[] n3S16pc=1 -> 0.5:(n3S16t0'=0)&(n3S16pc'=2) + 0.5:(n3S16t0'=1)&(n3S16pc'=2);
[] n3S16pc=2 & (n3S16t0=1) -> (n3S16pc'=3);
[] n3S16pc=2 & !((n3S16t0=1)) -> (n3S16pc'=5);
[] n3S16pc=3 -> (n3S16opt'=2)&(n3S16pc'=-4)&(n3S16ra'=4);
[] n3S16pc=4 -> (n3S16pc'=6);
[] n3S16pc=5 -> (n3S16opt'=3)&(n3S16pc'=-4)&(n3S16ra'=6);
[] numSteps<maxNumSteps & n3S16pc=6 -> (n3S16pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S7
n2S7ip0:[1..3] init 1;
n2S7ip1:[1..3] init 1;
n2S7is:[0..2] init 0;
n2S7op0:[1..3] init 1;
n2S7op1:[1..3] init 1;
n2S7os:[0..2] init 0;
n2S7opt:[1..3] init 1;
n2S7pc:[-6..2] init 0; n2S7ra:[-6..2] init 0;
[] n2S7is<2 & n2S7pc=-1 -> (n2S7ip0'=1)&(n2S7ip1'=n2S7ip0)&(n2S7is'=n2S7is+1)&(n2S7pc'=n2S7ra);
[] n2S7is=2 & n2S7pc=-1 -> (n2S7pc'=n2S7ra);
[] n2S7is=0 & n2S7pc=-2 -> (n2S7pc'=n2S7ra);
[] n2S7is>0 & n2S7is<2 & n2S7pc=-2 -> (n2S7ip1'=n2S7ip0)&(n2S7is'=n2S7is+1)&(n2S7pc'=n2S7ra);
[] n2S7is=2 & n2S7pc=-2 -> (n2S7pc'=n2S7ra);
[] n2S7is=0 & n2S7pc=-3 -> (n2S7pc'=n2S7ra);
[] n2S7is>0 & n2S7pc=-3 -> (n2S7ip0'=n2S7ip1)&(n2S7is'=n2S7is-1)&(n2S7pc'=n2S7ra);
[] n2S7os=0 & n2S7pc=-4 -> (n2S7op0'=n2S7opt)&(n2S7os'=1)&(n2S7pc'=-3);
[] n2S7os=1 & n2S7pc=-4 -> (n2S7op1'=n2S7opt)&(n2S7os'=2)&(n2S7pc'=-3);
[] n2S7os=2 & n2S7pc=-4 -> (n2S7pc'=-3);
[n2S8f1] n2S7is=0 -> (n2S7ip0'=3)&(n2S7is'=1);
[n2S8f1] n2S7is=1 -> (n2S7ip1'=3)&(n2S7is'=2);
[n2S8f1] n2S7is=2 -> true;
[n2S6f2] n2S7is=0 -> (n2S7ip0'=2)&(n2S7is'=1);
[n2S6f2] n2S7is=1 -> (n2S7ip1'=2)&(n2S7is'=2);
[n2S6f2] n2S7is=2 -> true;
[n2S5f2] n2S7is=0 -> (n2S7ip0'=1)&(n2S7is'=1);
[n2S5f2] n2S7is=1 -> (n2S7ip1'=1)&(n2S7is'=2);
[n2S5f2] n2S7is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S7pc=0 & n2S7os>0 -> (n2S7pc'=-5)&(unlk'=false);
[n2S7f3] n2S7pc=-5 & n2S7os>0 & n2S7op0=3 -> (n2S7op0'=n2S7op1)&(n2S7os'=n2S7os-1)&(n2S7pc'=-6);
[n2S7f2] n2S7pc=-5 & n2S7os>0 & n2S7op0=2 -> (n2S7op0'=n2S7op1)&(n2S7os'=n2S7os-1)&(n2S7pc'=-6);
[n2S7f1] n2S7pc=-5 & n2S7os>0 & n2S7op0=1 -> (n2S7op0'=n2S7op1)&(n2S7os'=n2S7os-1)&(n2S7pc'=-6);
[] numSteps<maxNumSteps & n2S7pc=-6 -> (n2S7pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S7pc=0 & n2S7is>0 -> (n2S7pc'=1)&(unlk'=false);
[] n2S7pc=1 -> (n2S7opt'=3)&(n2S7pc'=-4)&(n2S7ra'=2);
[] numSteps<maxNumSteps & n2S7pc=2 -> (n2S7pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module finisher
finished:bool init false;
[] !finished & assrtOK & unlk & n2H0is=0 & n2H0os=0 & n2H1is=0 & n2H1os=0 & n2S0is=0 & n2S0os=0 & n2S1is=0 & n2S1os=0 & n2S2is=0 & n2S2os=0 & n2S3is=0 & n2S3os=0 & n2S4is=0 & n2S4os=0 & n2S5is=0 & n2S5os=0 & n2S6is=0 & n2S6os=0 & n2S7is=0 & n2S7os=0 & n2S8is=0 & n2S8os=0 & n2S9is=0 & n2S9os=0 & n3S10is=0 & n3S10os=0 & n3S11is=0 & n3S11os=0 & n3S12is=0 & n3S12os=0 & n3S13is=0 & n3S13os=0 & n3S14is=0 & n3S14os=0 & n3S15is=0 & n3S15os=0 & n3S16is=0 & n3S16os=0 & n3S17is=0 & n3S17os=0 & n3S18is=0 & n3S18os=0 & n3S19is=0 & n3S19os=0 & n3S20is=0 & n3S20os=0 & n3S21is=0 & n3S21os=0 & n3S22is=0 & n3S22os=0 & n3S23is=0 & n3S23os=0 & n3S24is=0 & n3S24os=0 & n3S25is=0 & n3S25os=0 & n3S26is=0 & n3S26os=0 & n3S27is=0 & n3S27os=0 -> (finished'=true);
endmodule

//Properties

//  P=? [ F finished & assrtOK & obsrvOK & (n2H1v7arrived=1) ] / P=? [ F finished & obsrvOK ]
