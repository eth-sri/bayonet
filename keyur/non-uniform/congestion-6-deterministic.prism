dtmc
global unlk:[1..12] init 1;
global assrtOK:bool init true;
global obsrvOK:bool init true;
const int maxNumSteps = 40;
global numSteps:[0..maxNumSteps] init 0;
const int v11NUM_PACKETS = 3;
const int v7COST_01 = 1;
const int v7COST_02 = 2;
const int v7COST_03 = 3;
const int v7COST_12 = 1;
const int v7COST_23 = 1;
module n2H0
n2H0v9pkt_count:int init 0;
n2H0ip0:[1..2] init 1;
n2H0ip1:[1..2] init 1;
n2H0is:[0..2] init 1;
n2H0op0:[1..2] init 1;
n2H0op1:[1..2] init 1;
n2H0os:[0..2] init 0;
n2H0opt:[1..2] init 1;
n2H0pc:[-6..9] init 0; n2H0ra:[-6..9] init 0;
[] n2H0is<2 & n2H0pc=-1 -> (n2H0ip0'=1)&(n2H0ip1'=n2H0ip0)&(n2H0is'=n2H0is+1)&(n2H0pc'=n2H0ra);
[] n2H0is=2 & n2H0pc=-1 -> (n2H0pc'=n2H0ra);
[] n2H0is=0 & n2H0pc=-2 -> (n2H0pc'=n2H0ra);
[] n2H0is>0 & n2H0is<2 & n2H0pc=-2 -> (n2H0ip1'=n2H0ip0)&(n2H0is'=n2H0is+1)&(n2H0pc'=n2H0ra);
[] n2H0is=2 & n2H0pc=-2 -> (n2H0pc'=n2H0ra);
[] n2H0is=0 & n2H0pc=-3 -> (n2H0pc'=n2H0ra);
[] n2H0is>0 & n2H0pc=-3 -> (n2H0ip0'=n2H0ip1)&(n2H0is'=n2H0is-1)&(n2H0pc'=n2H0ra);
[] n2H0os=0 & n2H0pc=-4 -> (n2H0op0'=n2H0opt)&(n2H0os'=1)&(n2H0pc'=-3);
[] n2H0os=1 & n2H0pc=-4 -> (n2H0op1'=n2H0opt)&(n2H0os'=2)&(n2H0pc'=-3);
[] n2H0os=2 & n2H0pc=-4 -> (n2H0pc'=-3);
[n2S0f1] n2H0is=0 -> (n2H0ip0'=1)&(n2H0is'=1);
[n2S0f1] n2H0is=1 -> (n2H0ip1'=1)&(n2H0is'=2);
[n2S0f1] n2H0is=2 -> true;
[] unlk=7 & numSteps<maxNumSteps & n2H0pc=0 & n2H0os>0 -> (n2H0pc'=-5);
[] unlk=7 & numSteps<maxNumSteps & n2H0pc=0 & n2H0os=0 -> (unlk'=8);
[n2H0f1] n2H0pc=-5 & n2H0op0=1 -> (n2H0op0'=n2H0op1)&(n2H0os'=n2H0os-1)&(n2H0pc'=-6);
[] n2H0pc=-6 -> (n2H0pc'=0)&(unlk'=8)&(numSteps'=numSteps+1);
[] unlk=1 & numSteps<maxNumSteps & n2H0pc=0 & n2H0is>0 -> (n2H0pc'=1);
[] unlk=1 & numSteps<maxNumSteps & n2H0pc=0 & n2H0is=0 -> (unlk'=2);
[] n2H0pc=1 -> (n2H0pc'=-1)&(n2H0ra'=2);
[] n2H0pc=2 & (n2H0v9pkt_count<v11NUM_PACKETS) -> (n2H0pc'=3);
[] n2H0pc=2 & !((n2H0v9pkt_count<v11NUM_PACKETS)) -> (n2H0pc'=7);
[] n2H0pc=3 -> (n2H0pc'=-1)&(n2H0ra'=4);
[] n2H0pc=4 -> (n2H0v9pkt_count'=(n2H0v9pkt_count+1))&(n2H0pc'=5);
[] n2H0pc=5 -> (n2H0opt'=1)&(n2H0pc'=-4)&(n2H0ra'=6);
[] n2H0pc=6 -> (n2H0pc'=9);
[] n2H0pc=7 -> (n2H0pc'=-3)&(n2H0ra'=8);
[] n2H0pc=8 -> (n2H0pc'=-3)&(n2H0ra'=9);
[] n2H0pc=9 -> (n2H0pc'=0)&(unlk'=2)&(numSteps'=numSteps+1);
endmodule
module n2S3
n2S3ip0:[1..3] init 1;
n2S3ip1:[1..3] init 1;
n2S3is:[0..2] init 0;
n2S3op0:[1..3] init 1;
n2S3op1:[1..3] init 1;
n2S3os:[0..2] init 0;
n2S3opt:[1..3] init 1;
n2S3pc:[-6..4] init 0; n2S3ra:[-6..4] init 0;
[] n2S3is<2 & n2S3pc=-1 -> (n2S3ip0'=1)&(n2S3ip1'=n2S3ip0)&(n2S3is'=n2S3is+1)&(n2S3pc'=n2S3ra);
[] n2S3is=2 & n2S3pc=-1 -> (n2S3pc'=n2S3ra);
[] n2S3is=0 & n2S3pc=-2 -> (n2S3pc'=n2S3ra);
[] n2S3is>0 & n2S3is<2 & n2S3pc=-2 -> (n2S3ip1'=n2S3ip0)&(n2S3is'=n2S3is+1)&(n2S3pc'=n2S3ra);
[] n2S3is=2 & n2S3pc=-2 -> (n2S3pc'=n2S3ra);
[] n2S3is=0 & n2S3pc=-3 -> (n2S3pc'=n2S3ra);
[] n2S3is>0 & n2S3pc=-3 -> (n2S3ip0'=n2S3ip1)&(n2S3is'=n2S3is-1)&(n2S3pc'=n2S3ra);
[] n2S3os=0 & n2S3pc=-4 -> (n2S3op0'=n2S3opt)&(n2S3os'=1)&(n2S3pc'=-3);
[] n2S3os=1 & n2S3pc=-4 -> (n2S3op1'=n2S3opt)&(n2S3os'=2)&(n2S3pc'=-3);
[] n2S3os=2 & n2S3pc=-4 -> (n2S3pc'=-3);
[n2H1f1] n2S3is=0 -> (n2S3ip0'=3)&(n2S3is'=1);
[n2H1f1] n2S3is=1 -> (n2S3ip1'=3)&(n2S3is'=2);
[n2H1f1] n2S3is=2 -> true;
[n2S2f3] n2S3is=0 -> (n2S3ip0'=2)&(n2S3is'=1);
[n2S2f3] n2S3is=1 -> (n2S3ip1'=2)&(n2S3is'=2);
[n2S2f3] n2S3is=2 -> true;
[n2S0f3] n2S3is=0 -> (n2S3ip0'=1)&(n2S3is'=1);
[n2S0f3] n2S3is=1 -> (n2S3ip1'=1)&(n2S3is'=2);
[n2S0f3] n2S3is=2 -> true;
[] unlk=8 & numSteps<maxNumSteps & n2S3pc=0 & n2S3os>0 -> (n2S3pc'=-5);
[] unlk=8 & numSteps<maxNumSteps & n2S3pc=0 & n2S3os=0 -> (unlk'=9);
[n2S3f3] n2S3pc=-5 & n2S3op0=3 -> (n2S3op0'=n2S3op1)&(n2S3os'=n2S3os-1)&(n2S3pc'=-6);
[n2S3f2] n2S3pc=-5 & n2S3op0=2 -> (n2S3op0'=n2S3op1)&(n2S3os'=n2S3os-1)&(n2S3pc'=-6);
[n2S3f1] n2S3pc=-5 & n2S3op0=1 -> (n2S3op0'=n2S3op1)&(n2S3os'=n2S3os-1)&(n2S3pc'=-6);
[] n2S3pc=-6 -> (n2S3pc'=0)&(unlk'=9)&(numSteps'=numSteps+1);
[] unlk=2 & numSteps<maxNumSteps & n2S3pc=0 & n2S3is>0 -> (n2S3pc'=1);
[] unlk=2 & numSteps<maxNumSteps & n2S3pc=0 & n2S3is=0 -> (unlk'=3);
[] n2S3pc=1 & ((n2S3ip0=1)|(n2S3ip0=2)) -> (n2S3pc'=2);
[] n2S3pc=1 & !(((n2S3ip0=1)|(n2S3ip0=2))) -> (n2S3pc'=4);
[] n2S3pc=2 -> (n2S3opt'=3)&(n2S3pc'=-4)&(n2S3ra'=3);
[] n2S3pc=3 -> (n2S3pc'=4);
[] n2S3pc=4 -> (n2S3pc'=0)&(unlk'=3)&(numSteps'=numSteps+1);
endmodule
module n2S2
n2S2ip0:[1..3] init 1;
n2S2ip1:[1..3] init 1;
n2S2is:[0..2] init 0;
n2S2op0:[1..3] init 1;
n2S2op1:[1..3] init 1;
n2S2os:[0..2] init 0;
n2S2opt:[1..3] init 1;
n2S2pc:[-6..4] init 0; n2S2ra:[-6..4] init 0;
[] n2S2is<2 & n2S2pc=-1 -> (n2S2ip0'=1)&(n2S2ip1'=n2S2ip0)&(n2S2is'=n2S2is+1)&(n2S2pc'=n2S2ra);
[] n2S2is=2 & n2S2pc=-1 -> (n2S2pc'=n2S2ra);
[] n2S2is=0 & n2S2pc=-2 -> (n2S2pc'=n2S2ra);
[] n2S2is>0 & n2S2is<2 & n2S2pc=-2 -> (n2S2ip1'=n2S2ip0)&(n2S2is'=n2S2is+1)&(n2S2pc'=n2S2ra);
[] n2S2is=2 & n2S2pc=-2 -> (n2S2pc'=n2S2ra);
[] n2S2is=0 & n2S2pc=-3 -> (n2S2pc'=n2S2ra);
[] n2S2is>0 & n2S2pc=-3 -> (n2S2ip0'=n2S2ip1)&(n2S2is'=n2S2is-1)&(n2S2pc'=n2S2ra);
[] n2S2os=0 & n2S2pc=-4 -> (n2S2op0'=n2S2opt)&(n2S2os'=1)&(n2S2pc'=-3);
[] n2S2os=1 & n2S2pc=-4 -> (n2S2op1'=n2S2opt)&(n2S2os'=2)&(n2S2pc'=-3);
[] n2S2os=2 & n2S2pc=-4 -> (n2S2pc'=-3);
[n2S3f2] n2S2is=0 -> (n2S2ip0'=3)&(n2S2is'=1);
[n2S3f2] n2S2is=1 -> (n2S2ip1'=3)&(n2S2is'=2);
[n2S3f2] n2S2is=2 -> true;
[n2S1f2] n2S2is=0 -> (n2S2ip0'=2)&(n2S2is'=1);
[n2S1f2] n2S2is=1 -> (n2S2ip1'=2)&(n2S2is'=2);
[n2S1f2] n2S2is=2 -> true;
[n2S0f4] n2S2is=0 -> (n2S2ip0'=1)&(n2S2is'=1);
[n2S0f4] n2S2is=1 -> (n2S2ip1'=1)&(n2S2is'=2);
[n2S0f4] n2S2is=2 -> true;
[] unlk=9 & numSteps<maxNumSteps & n2S2pc=0 & n2S2os>0 -> (n2S2pc'=-5);
[] unlk=9 & numSteps<maxNumSteps & n2S2pc=0 & n2S2os=0 -> (unlk'=10);
[n2S2f3] n2S2pc=-5 & n2S2op0=3 -> (n2S2op0'=n2S2op1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[n2S2f2] n2S2pc=-5 & n2S2op0=2 -> (n2S2op0'=n2S2op1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[n2S2f1] n2S2pc=-5 & n2S2op0=1 -> (n2S2op0'=n2S2op1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[] n2S2pc=-6 -> (n2S2pc'=0)&(unlk'=10)&(numSteps'=numSteps+1);
[] unlk=3 & numSteps<maxNumSteps & n2S2pc=0 & n2S2is>0 -> (n2S2pc'=1);
[] unlk=3 & numSteps<maxNumSteps & n2S2pc=0 & n2S2is=0 -> (unlk'=4);
[] n2S2pc=1 & ((n2S2ip0=1)|(n2S2ip0=2)) -> (n2S2pc'=2);
[] n2S2pc=1 & !(((n2S2ip0=1)|(n2S2ip0=2))) -> (n2S2pc'=4);
[] n2S2pc=2 -> (n2S2opt'=3)&(n2S2pc'=-4)&(n2S2ra'=3);
[] n2S2pc=3 -> (n2S2pc'=4);
[] n2S2pc=4 -> (n2S2pc'=0)&(unlk'=4)&(numSteps'=numSteps+1);
endmodule
module n2S1
n2S1ip0:[1..2] init 1;
n2S1ip1:[1..2] init 1;
n2S1is:[0..2] init 0;
n2S1op0:[1..2] init 1;
n2S1op1:[1..2] init 1;
n2S1os:[0..2] init 0;
n2S1opt:[1..2] init 1;
n2S1pc:[-6..4] init 0; n2S1ra:[-6..4] init 0;
[] n2S1is<2 & n2S1pc=-1 -> (n2S1ip0'=1)&(n2S1ip1'=n2S1ip0)&(n2S1is'=n2S1is+1)&(n2S1pc'=n2S1ra);
[] n2S1is=2 & n2S1pc=-1 -> (n2S1pc'=n2S1ra);
[] n2S1is=0 & n2S1pc=-2 -> (n2S1pc'=n2S1ra);
[] n2S1is>0 & n2S1is<2 & n2S1pc=-2 -> (n2S1ip1'=n2S1ip0)&(n2S1is'=n2S1is+1)&(n2S1pc'=n2S1ra);
[] n2S1is=2 & n2S1pc=-2 -> (n2S1pc'=n2S1ra);
[] n2S1is=0 & n2S1pc=-3 -> (n2S1pc'=n2S1ra);
[] n2S1is>0 & n2S1pc=-3 -> (n2S1ip0'=n2S1ip1)&(n2S1is'=n2S1is-1)&(n2S1pc'=n2S1ra);
[] n2S1os=0 & n2S1pc=-4 -> (n2S1op0'=n2S1opt)&(n2S1os'=1)&(n2S1pc'=-3);
[] n2S1os=1 & n2S1pc=-4 -> (n2S1op1'=n2S1opt)&(n2S1os'=2)&(n2S1pc'=-3);
[] n2S1os=2 & n2S1pc=-4 -> (n2S1pc'=-3);
[n2S2f2] n2S1is=0 -> (n2S1ip0'=2)&(n2S1is'=1);
[n2S2f2] n2S1is=1 -> (n2S1ip1'=2)&(n2S1is'=2);
[n2S2f2] n2S1is=2 -> true;
[n2S0f2] n2S1is=0 -> (n2S1ip0'=1)&(n2S1is'=1);
[n2S0f2] n2S1is=1 -> (n2S1ip1'=1)&(n2S1is'=2);
[n2S0f2] n2S1is=2 -> true;
[] unlk=10 & numSteps<maxNumSteps & n2S1pc=0 & n2S1os>0 -> (n2S1pc'=-5);
[] unlk=10 & numSteps<maxNumSteps & n2S1pc=0 & n2S1os=0 -> (unlk'=11);
[n2S1f2] n2S1pc=-5 & n2S1op0=2 -> (n2S1op0'=n2S1op1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[n2S1f1] n2S1pc=-5 & n2S1op0=1 -> (n2S1op0'=n2S1op1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[] n2S1pc=-6 -> (n2S1pc'=0)&(unlk'=11)&(numSteps'=numSteps+1);
[] unlk=4 & numSteps<maxNumSteps & n2S1pc=0 & n2S1is>0 -> (n2S1pc'=1);
[] unlk=4 & numSteps<maxNumSteps & n2S1pc=0 & n2S1is=0 -> (unlk'=5);
[] n2S1pc=1 & (n2S1ip0=1) -> (n2S1pc'=2);
[] n2S1pc=1 & !((n2S1ip0=1)) -> (n2S1pc'=4);
[] n2S1pc=2 -> (n2S1opt'=2)&(n2S1pc'=-4)&(n2S1ra'=3);
[] n2S1pc=3 -> (n2S1pc'=4);
[] n2S1pc=4 -> (n2S1pc'=0)&(unlk'=5)&(numSteps'=numSteps+1);
endmodule
module n2S0
n2S0v6route1:int init 0;
n2S0v6route2:int init 0;
n2S0v6route3:int init 0;
n2S0v9shortest1:int init 0;
n2S0v9shortest2:int init 0;
n2S0v9shortest3:int init 0;
n2S0v9nshortest:int init 0;
n2S0v5which:int init 0;
n2S0t0:[1..2];
n2S0t1:[1..3];
n2S0ip0:[1..4] init 1;
n2S0ip1:[1..4] init 1;
n2S0is:[0..2] init 0;
n2S0op0:[1..4] init 1;
n2S0op1:[1..4] init 1;
n2S0os:[0..2] init 0;
n2S0opt:[1..4] init 1;
n2S0pc:[-6..35] init 0; n2S0ra:[-6..35] init 0;
[] n2S0is<2 & n2S0pc=-1 -> (n2S0ip0'=1)&(n2S0ip1'=n2S0ip0)&(n2S0is'=n2S0is+1)&(n2S0pc'=n2S0ra);
[] n2S0is=2 & n2S0pc=-1 -> (n2S0pc'=n2S0ra);
[] n2S0is=0 & n2S0pc=-2 -> (n2S0pc'=n2S0ra);
[] n2S0is>0 & n2S0is<2 & n2S0pc=-2 -> (n2S0ip1'=n2S0ip0)&(n2S0is'=n2S0is+1)&(n2S0pc'=n2S0ra);
[] n2S0is=2 & n2S0pc=-2 -> (n2S0pc'=n2S0ra);
[] n2S0is=0 & n2S0pc=-3 -> (n2S0pc'=n2S0ra);
[] n2S0is>0 & n2S0pc=-3 -> (n2S0ip0'=n2S0ip1)&(n2S0is'=n2S0is-1)&(n2S0pc'=n2S0ra);
[] n2S0os=0 & n2S0pc=-4 -> (n2S0op0'=n2S0opt)&(n2S0os'=1)&(n2S0pc'=-3);
[] n2S0os=1 & n2S0pc=-4 -> (n2S0op1'=n2S0opt)&(n2S0os'=2)&(n2S0pc'=-3);
[] n2S0os=2 & n2S0pc=-4 -> (n2S0pc'=-3);
[n2S2f1] n2S0is=0 -> (n2S0ip0'=4)&(n2S0is'=1);
[n2S2f1] n2S0is=1 -> (n2S0ip1'=4)&(n2S0is'=2);
[n2S2f1] n2S0is=2 -> true;
[n2S3f1] n2S0is=0 -> (n2S0ip0'=3)&(n2S0is'=1);
[n2S3f1] n2S0is=1 -> (n2S0ip1'=3)&(n2S0is'=2);
[n2S3f1] n2S0is=2 -> true;
[n2S1f1] n2S0is=0 -> (n2S0ip0'=2)&(n2S0is'=1);
[n2S1f1] n2S0is=1 -> (n2S0ip1'=2)&(n2S0is'=2);
[n2S1f1] n2S0is=2 -> true;
[n2H0f1] n2S0is=0 -> (n2S0ip0'=1)&(n2S0is'=1);
[n2H0f1] n2S0is=1 -> (n2S0ip1'=1)&(n2S0is'=2);
[n2H0f1] n2S0is=2 -> true;
[] unlk=11 & numSteps<maxNumSteps & n2S0pc=0 & n2S0os>0 -> (n2S0pc'=-5);
[] unlk=11 & numSteps<maxNumSteps & n2S0pc=0 & n2S0os=0 -> (unlk'=12);
[n2S0f4] n2S0pc=-5 & n2S0op0=4 -> (n2S0op0'=n2S0op1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f3] n2S0pc=-5 & n2S0op0=3 -> (n2S0op0'=n2S0op1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f2] n2S0pc=-5 & n2S0op0=2 -> (n2S0op0'=n2S0op1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f1] n2S0pc=-5 & n2S0op0=1 -> (n2S0op0'=n2S0op1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[] n2S0pc=-6 -> (n2S0pc'=0)&(unlk'=12)&(numSteps'=numSteps+1);
[] unlk=5 & numSteps<maxNumSteps & n2S0pc=0 & n2S0is>0 -> (n2S0pc'=1);
[] unlk=5 & numSteps<maxNumSteps & n2S0pc=0 & n2S0is=0 -> (unlk'=6);
[] n2S0pc=1 & (n2S0ip0=1) -> (n2S0pc'=2);
[] n2S0pc=1 & !((n2S0ip0=1)) -> (n2S0pc'=35);
[] n2S0pc=2 -> (n2S0v6route1'=((v7COST_01+v7COST_12)+v7COST_23))&(n2S0pc'=3);
[] n2S0pc=3 -> (n2S0v6route2'=v7COST_03)&(n2S0pc'=4);
[] n2S0pc=4 -> (n2S0v6route3'=(v7COST_02+v7COST_23))&(n2S0pc'=5);
[] n2S0pc=5 -> (n2S0v9shortest1'=0)&(n2S0pc'=6);
[] n2S0pc=6 -> (n2S0v9shortest2'=0)&(n2S0pc'=7);
[] n2S0pc=7 -> (n2S0v9shortest3'=0)&(n2S0pc'=8);
[] n2S0pc=8 & ((n2S0v6route1<=n2S0v6route2)&(n2S0v6route2<=n2S0v6route3)) -> (n2S0pc'=9);
[] n2S0pc=8 & !(((n2S0v6route1<=n2S0v6route2)&(n2S0v6route2<=n2S0v6route3))) -> (n2S0pc'=11);
[] n2S0pc=9 -> (n2S0v9shortest1'=1)&(n2S0pc'=10);
[] n2S0pc=10 -> (n2S0pc'=11);
[] n2S0pc=11 & ((n2S0v6route2<=n2S0v6route1)&(n2S0v6route2<=n2S0v6route3)) -> (n2S0pc'=12);
[] n2S0pc=11 & !(((n2S0v6route2<=n2S0v6route1)&(n2S0v6route2<=n2S0v6route3))) -> (n2S0pc'=14);
[] n2S0pc=12 -> (n2S0v9shortest2'=1)&(n2S0pc'=13);
[] n2S0pc=13 -> (n2S0pc'=14);
[] n2S0pc=14 & ((n2S0v6route3<=n2S0v6route1)&(n2S0v6route3<=n2S0v6route2)) -> (n2S0pc'=15);
[] n2S0pc=14 & !(((n2S0v6route3<=n2S0v6route1)&(n2S0v6route3<=n2S0v6route2))) -> (n2S0pc'=17);
[] n2S0pc=15 -> (n2S0v9shortest3'=1)&(n2S0pc'=16);
[] n2S0pc=16 -> (n2S0pc'=17);
[] n2S0pc=17 -> (n2S0v9nshortest'=((n2S0v9shortest1+n2S0v9shortest2)+n2S0v9shortest3))&(n2S0pc'=18);
[] n2S0pc=18 & (n2S0v9nshortest=1) -> (n2S0pc'=19);
[] n2S0pc=18 & !((n2S0v9nshortest=1)) -> (n2S0pc'=21);
[] n2S0pc=19 -> (n2S0v5which'=1)&(n2S0pc'=20);
[] n2S0pc=20 -> (n2S0pc'=27);
[] n2S0pc=21 & (n2S0v9nshortest=2) -> (n2S0pc'=22);
[] n2S0pc=21 & !((n2S0v9nshortest=2)) -> (n2S0pc'=25);
[] n2S0pc=22 -> 0.5:(n2S0t0'=1)&(n2S0pc'=23) + 0.5:(n2S0t0'=2)&(n2S0pc'=23);
[] n2S0pc=23 -> (n2S0v5which'=n2S0t0)&(n2S0pc'=24);
[] n2S0pc=24 -> (n2S0pc'=27);
[] n2S0pc=25 -> 0.333333:(n2S0t1'=1)&(n2S0pc'=26) + 0.333333:(n2S0t1'=2)&(n2S0pc'=26) + 0.333333:(n2S0t1'=3)&(n2S0pc'=26);
[] n2S0pc=26 -> (n2S0v5which'=n2S0t1)&(n2S0pc'=27);
[] n2S0pc=27 & (n2S0v5which=n2S0v9shortest1) -> (n2S0pc'=28);
[] n2S0pc=27 & !((n2S0v5which=n2S0v9shortest1)) -> (n2S0pc'=30);
[] n2S0pc=28 -> (n2S0opt'=2)&(n2S0pc'=-4)&(n2S0ra'=29);
[] n2S0pc=29 -> (n2S0pc'=34);
[] n2S0pc=30 & (n2S0v5which=(n2S0v9shortest1+n2S0v9shortest2)) -> (n2S0pc'=31);
[] n2S0pc=30 & !((n2S0v5which=(n2S0v9shortest1+n2S0v9shortest2))) -> (n2S0pc'=33);
[] n2S0pc=31 -> (n2S0opt'=3)&(n2S0pc'=-4)&(n2S0ra'=32);
[] n2S0pc=32 -> (n2S0pc'=34);
[] n2S0pc=33 -> (n2S0opt'=4)&(n2S0pc'=-4)&(n2S0ra'=34);
[] n2S0pc=34 -> (n2S0pc'=35);
[] n2S0pc=35 -> (n2S0pc'=0)&(unlk'=6)&(numSteps'=numSteps+1);
endmodule
module n2H1
n2H1v9pkt_count:int init 0;
n2H1ip0:[1..2] init 1;
n2H1ip1:[1..2] init 1;
n2H1is:[0..2] init 0;
n2H1op0:[1..2] init 1;
n2H1op1:[1..2] init 1;
n2H1os:[0..2] init 0;
n2H1opt:[1..2] init 1;
n2H1pc:[-6..3] init 0; n2H1ra:[-6..3] init 0;
[] n2H1is<2 & n2H1pc=-1 -> (n2H1ip0'=1)&(n2H1ip1'=n2H1ip0)&(n2H1is'=n2H1is+1)&(n2H1pc'=n2H1ra);
[] n2H1is=2 & n2H1pc=-1 -> (n2H1pc'=n2H1ra);
[] n2H1is=0 & n2H1pc=-2 -> (n2H1pc'=n2H1ra);
[] n2H1is>0 & n2H1is<2 & n2H1pc=-2 -> (n2H1ip1'=n2H1ip0)&(n2H1is'=n2H1is+1)&(n2H1pc'=n2H1ra);
[] n2H1is=2 & n2H1pc=-2 -> (n2H1pc'=n2H1ra);
[] n2H1is=0 & n2H1pc=-3 -> (n2H1pc'=n2H1ra);
[] n2H1is>0 & n2H1pc=-3 -> (n2H1ip0'=n2H1ip1)&(n2H1is'=n2H1is-1)&(n2H1pc'=n2H1ra);
[] n2H1os=0 & n2H1pc=-4 -> (n2H1op0'=n2H1opt)&(n2H1os'=1)&(n2H1pc'=-3);
[] n2H1os=1 & n2H1pc=-4 -> (n2H1op1'=n2H1opt)&(n2H1os'=2)&(n2H1pc'=-3);
[] n2H1os=2 & n2H1pc=-4 -> (n2H1pc'=-3);
[n2S3f3] n2H1is=0 -> (n2H1ip0'=1)&(n2H1is'=1);
[n2S3f3] n2H1is=1 -> (n2H1ip1'=1)&(n2H1is'=2);
[n2S3f3] n2H1is=2 -> true;
[] unlk=12 & numSteps<maxNumSteps & n2H1pc=0 & n2H1os>0 -> (n2H1pc'=-5);
[] unlk=12 & numSteps<maxNumSteps & n2H1pc=0 & n2H1os=0 -> (unlk'=1);
[n2H1f1] n2H1pc=-5 & n2H1op0=1 -> (n2H1op0'=n2H1op1)&(n2H1os'=n2H1os-1)&(n2H1pc'=-6);
[] n2H1pc=-6 -> (n2H1pc'=0)&(unlk'=1)&(numSteps'=numSteps+1);
[] unlk=6 & numSteps<maxNumSteps & n2H1pc=0 & n2H1is>0 -> (n2H1pc'=1);
[] unlk=6 & numSteps<maxNumSteps & n2H1pc=0 & n2H1is=0 -> (unlk'=7);
[] n2H1pc=1 -> (n2H1v9pkt_count'=(n2H1v9pkt_count+1))&(n2H1pc'=2);
[] n2H1pc=2 -> (n2H1pc'=-3)&(n2H1ra'=3);
[] n2H1pc=3 -> (n2H1pc'=0)&(unlk'=7)&(numSteps'=numSteps+1);
endmodule


//Properties
//  P=? [ F "deadlock" & assrtOK & obsrvOK & (n2H1v9pkt_count<v11NUM_PACKETS) ] / P=? [ F "deadlock" & obsrvOK ]
