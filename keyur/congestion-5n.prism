mdp
global unlk:bool init true;
global assrtOK:bool init true;
global obsrvOK:bool init true;
const int INTMIN = 0; const int INTMAX = 255;
const int maxNumSteps = 30;
global numSteps:[0..maxNumSteps] init 0;
const int v11NUM_PACKETS = 3;
const int v7COST_01 = 2;
const int v7COST_02 = 1;
const int v7COST_21 = 1;
module n2H0
n2H0v9pkt_count:[INTMIN..INTMAX] init 0;
n2H0ip0:[1..2] init 1;n2H0iv3dst0:[INTMIN..INTMAX] init 0;
n2H0ip1:[1..2] init 1;n2H0iv3dst1:[INTMIN..INTMAX] init 0;
n2H0is:[0..2] init 1;
n2H0op0:[1..2] init 1;n2H0ov3dst0:[INTMIN..INTMAX] init 0;
n2H0op1:[1..2] init 1;n2H0ov3dst1:[INTMIN..INTMAX] init 0;
n2H0os:[0..2] init 0;
n2H0opt:[1..2] init 1;
n2H0pc:[-6..10] init 0; n2H0ra:[-6..10] init 0;
[] n2H0is<2 & n2H0pc=-1 -> (n2H0ip0'=1)&(n2H0iv3dst0'=0)&(n2H0ip1'=n2H0ip0)&(n2H0iv3dst1'=n2H0iv3dst0)&(n2H0is'=n2H0is+1)&(n2H0pc'=n2H0ra);
[] n2H0is=2 & n2H0pc=-1 -> (n2H0pc'=n2H0ra);
[] n2H0is=0 & n2H0pc=-2 -> (n2H0pc'=n2H0ra);
[] n2H0is>0 & n2H0is<2 & n2H0pc=-2 -> (n2H0ip1'=n2H0ip0)&(n2H0iv3dst1'=n2H0iv3dst0)&(n2H0is'=n2H0is+1)&(n2H0pc'=n2H0ra);
[] n2H0is=2 & n2H0pc=-2 -> (n2H0pc'=n2H0ra);
[] n2H0is=0 & n2H0pc=-3 -> (n2H0pc'=n2H0ra);
[] n2H0is>0 & n2H0pc=-3 -> (n2H0ip0'=n2H0ip1)&(n2H0iv3dst0'=n2H0iv3dst1)&(n2H0is'=n2H0is-1)&(n2H0pc'=n2H0ra);
[] n2H0os=0 & n2H0pc=-4 -> (n2H0op0'=n2H0opt)&(n2H0ov3dst0'=n2H0iv3dst0)&(n2H0os'=1)&(n2H0pc'=-3);
[] n2H0os=1 & n2H0pc=-4 -> (n2H0op1'=n2H0opt)&(n2H0ov3dst1'=n2H0iv3dst0)&(n2H0os'=2)&(n2H0pc'=-3);
[] n2H0os=2 & n2H0pc=-4 -> (n2H0pc'=-3);
[n2S0f3] n2H0is=0 -> (n2H0ip0'=1)&(n2H0iv3dst0'=n2S0ov3dst0)&(n2H0is'=1);
[n2S0f3] n2H0is=1 -> (n2H0ip1'=1)&(n2H0iv3dst1'=n2S0ov3dst0)&(n2H0is'=2);
[n2S0f3] n2H0is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2H0pc=0 & n2H0os>0 -> (n2H0pc'=-5)&(unlk'=false);
[n2H0f1] n2H0pc=-5 & n2H0os>0 & n2H0op0=1 -> (n2H0op0'=n2H0op1)&(n2H0ov3dst0'=n2H0ov3dst1)&(n2H0os'=n2H0os-1)&(n2H0pc'=-6);
[] numSteps<maxNumSteps & n2H0pc=-6 -> (n2H0pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2H0pc=0 & n2H0is>0 -> (n2H0pc'=1)&(unlk'=false);
[] n2H0pc=1 -> (n2H0pc'=-1)&(n2H0ra'=2);
[] n2H0pc=2 & (n2H0v9pkt_count<v11NUM_PACKETS) -> (n2H0pc'=3);
[] n2H0pc=2 & !((n2H0v9pkt_count<v11NUM_PACKETS)) -> (n2H0pc'=8);
[] n2H0pc=3 -> (n2H0pc'=-1)&(n2H0ra'=4);
[] n2H0pc=4 & (n2H0v9pkt_count+1)>=INTMIN & (n2H0v9pkt_count+1)<=INTMAX -> (n2H0v9pkt_count'=(n2H0v9pkt_count+1))&(n2H0pc'=5);
[] n2H0pc=5 & 1>=INTMIN & 1<=INTMAX -> (n2H0iv3dst0'=1)&(n2H0pc'=6);
[] n2H0pc=6 -> (n2H0opt'=1)&(n2H0pc'=-4)&(n2H0ra'=7);
[] n2H0pc=7 -> (n2H0pc'=10);
[] n2H0pc=8 -> (n2H0pc'=-3)&(n2H0ra'=9);
[] n2H0pc=9 -> (n2H0pc'=-3)&(n2H0ra'=10);
[] numSteps<maxNumSteps & n2H0pc=10 -> (n2H0pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S2
n2S2ip0:[1..2] init 1;n2S2iv3dst0:[INTMIN..INTMAX] init 0;
n2S2ip1:[1..2] init 1;n2S2iv3dst1:[INTMIN..INTMAX] init 0;
n2S2is:[0..2] init 0;
n2S2op0:[1..2] init 1;n2S2ov3dst0:[INTMIN..INTMAX] init 0;
n2S2op1:[1..2] init 1;n2S2ov3dst1:[INTMIN..INTMAX] init 0;
n2S2os:[0..2] init 0;
n2S2opt:[1..2] init 1;
n2S2pc:[-6..5] init 0; n2S2ra:[-6..5] init 0;
[] n2S2is<2 & n2S2pc=-1 -> (n2S2ip0'=1)&(n2S2iv3dst0'=0)&(n2S2ip1'=n2S2ip0)&(n2S2iv3dst1'=n2S2iv3dst0)&(n2S2is'=n2S2is+1)&(n2S2pc'=n2S2ra);
[] n2S2is=2 & n2S2pc=-1 -> (n2S2pc'=n2S2ra);
[] n2S2is=0 & n2S2pc=-2 -> (n2S2pc'=n2S2ra);
[] n2S2is>0 & n2S2is<2 & n2S2pc=-2 -> (n2S2ip1'=n2S2ip0)&(n2S2iv3dst1'=n2S2iv3dst0)&(n2S2is'=n2S2is+1)&(n2S2pc'=n2S2ra);
[] n2S2is=2 & n2S2pc=-2 -> (n2S2pc'=n2S2ra);
[] n2S2is=0 & n2S2pc=-3 -> (n2S2pc'=n2S2ra);
[] n2S2is>0 & n2S2pc=-3 -> (n2S2ip0'=n2S2ip1)&(n2S2iv3dst0'=n2S2iv3dst1)&(n2S2is'=n2S2is-1)&(n2S2pc'=n2S2ra);
[] n2S2os=0 & n2S2pc=-4 -> (n2S2op0'=n2S2opt)&(n2S2ov3dst0'=n2S2iv3dst0)&(n2S2os'=1)&(n2S2pc'=-3);
[] n2S2os=1 & n2S2pc=-4 -> (n2S2op1'=n2S2opt)&(n2S2ov3dst1'=n2S2iv3dst0)&(n2S2os'=2)&(n2S2pc'=-3);
[] n2S2os=2 & n2S2pc=-4 -> (n2S2pc'=-3);
[n2S1f2] n2S2is=0 -> (n2S2ip0'=2)&(n2S2iv3dst0'=n2S1ov3dst0)&(n2S2is'=1);
[n2S1f2] n2S2is=1 -> (n2S2ip1'=2)&(n2S2iv3dst1'=n2S1ov3dst0)&(n2S2is'=2);
[n2S1f2] n2S2is=2 -> true;
[n2S0f2] n2S2is=0 -> (n2S2ip0'=1)&(n2S2iv3dst0'=n2S0ov3dst0)&(n2S2is'=1);
[n2S0f2] n2S2is=1 -> (n2S2ip1'=1)&(n2S2iv3dst1'=n2S0ov3dst0)&(n2S2is'=2);
[n2S0f2] n2S2is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S2pc=0 & n2S2os>0 -> (n2S2pc'=-5)&(unlk'=false);
[n2S2f2] n2S2pc=-5 & n2S2os>0 & n2S2op0=2 -> (n2S2op0'=n2S2op1)&(n2S2ov3dst0'=n2S2ov3dst1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[n2S2f1] n2S2pc=-5 & n2S2os>0 & n2S2op0=1 -> (n2S2op0'=n2S2op1)&(n2S2ov3dst0'=n2S2ov3dst1)&(n2S2os'=n2S2os-1)&(n2S2pc'=-6);
[] numSteps<maxNumSteps & n2S2pc=-6 -> (n2S2pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S2pc=0 & n2S2is>0 -> (n2S2pc'=1)&(unlk'=false);
[] n2S2pc=1 & (n2S2ip0=1) -> (n2S2pc'=2);
[] n2S2pc=1 & !((n2S2ip0=1)) -> (n2S2pc'=4);
[] n2S2pc=2 -> (n2S2opt'=2)&(n2S2pc'=-4)&(n2S2ra'=3);
[] n2S2pc=3 -> (n2S2pc'=5);
[] n2S2pc=4 -> (n2S2opt'=1)&(n2S2pc'=-4)&(n2S2ra'=5);
[] numSteps<maxNumSteps & n2S2pc=5 -> (n2S2pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S1
n2S1v6route1:[INTMIN..INTMAX] init 0;
n2S1v6route2:[INTMIN..INTMAX] init 0;
n2S1t0:[0..1];
n2S1ip0:[1..3] init 1;n2S1iv3dst0:[INTMIN..INTMAX] init 0;
n2S1ip1:[1..3] init 1;n2S1iv3dst1:[INTMIN..INTMAX] init 0;
n2S1is:[0..2] init 0;
n2S1op0:[1..3] init 1;n2S1ov3dst0:[INTMIN..INTMAX] init 0;
n2S1op1:[1..3] init 1;n2S1ov3dst1:[INTMIN..INTMAX] init 0;
n2S1os:[0..2] init 0;
n2S1opt:[1..3] init 1;
n2S1pc:[-6..19] init 0; n2S1ra:[-6..19] init 0;
[] n2S1is<2 & n2S1pc=-1 -> (n2S1ip0'=1)&(n2S1iv3dst0'=0)&(n2S1ip1'=n2S1ip0)&(n2S1iv3dst1'=n2S1iv3dst0)&(n2S1is'=n2S1is+1)&(n2S1pc'=n2S1ra);
[] n2S1is=2 & n2S1pc=-1 -> (n2S1pc'=n2S1ra);
[] n2S1is=0 & n2S1pc=-2 -> (n2S1pc'=n2S1ra);
[] n2S1is>0 & n2S1is<2 & n2S1pc=-2 -> (n2S1ip1'=n2S1ip0)&(n2S1iv3dst1'=n2S1iv3dst0)&(n2S1is'=n2S1is+1)&(n2S1pc'=n2S1ra);
[] n2S1is=2 & n2S1pc=-2 -> (n2S1pc'=n2S1ra);
[] n2S1is=0 & n2S1pc=-3 -> (n2S1pc'=n2S1ra);
[] n2S1is>0 & n2S1pc=-3 -> (n2S1ip0'=n2S1ip1)&(n2S1iv3dst0'=n2S1iv3dst1)&(n2S1is'=n2S1is-1)&(n2S1pc'=n2S1ra);
[] n2S1os=0 & n2S1pc=-4 -> (n2S1op0'=n2S1opt)&(n2S1ov3dst0'=n2S1iv3dst0)&(n2S1os'=1)&(n2S1pc'=-3);
[] n2S1os=1 & n2S1pc=-4 -> (n2S1op1'=n2S1opt)&(n2S1ov3dst1'=n2S1iv3dst0)&(n2S1os'=2)&(n2S1pc'=-3);
[] n2S1os=2 & n2S1pc=-4 -> (n2S1pc'=-3);
[n2H1f1] n2S1is=0 -> (n2S1ip0'=3)&(n2S1iv3dst0'=n2H1ov3dst0)&(n2S1is'=1);
[n2H1f1] n2S1is=1 -> (n2S1ip1'=3)&(n2S1iv3dst1'=n2H1ov3dst0)&(n2S1is'=2);
[n2H1f1] n2S1is=2 -> true;
[n2S2f2] n2S1is=0 -> (n2S1ip0'=2)&(n2S1iv3dst0'=n2S2ov3dst0)&(n2S1is'=1);
[n2S2f2] n2S1is=1 -> (n2S1ip1'=2)&(n2S1iv3dst1'=n2S2ov3dst0)&(n2S1is'=2);
[n2S2f2] n2S1is=2 -> true;
[n2S0f1] n2S1is=0 -> (n2S1ip0'=1)&(n2S1iv3dst0'=n2S0ov3dst0)&(n2S1is'=1);
[n2S0f1] n2S1is=1 -> (n2S1ip1'=1)&(n2S1iv3dst1'=n2S0ov3dst0)&(n2S1is'=2);
[n2S0f1] n2S1is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S1pc=0 & n2S1os>0 -> (n2S1pc'=-5)&(unlk'=false);
[n2S1f3] n2S1pc=-5 & n2S1os>0 & n2S1op0=3 -> (n2S1op0'=n2S1op1)&(n2S1ov3dst0'=n2S1ov3dst1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[n2S1f2] n2S1pc=-5 & n2S1os>0 & n2S1op0=2 -> (n2S1op0'=n2S1op1)&(n2S1ov3dst0'=n2S1ov3dst1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[n2S1f1] n2S1pc=-5 & n2S1os>0 & n2S1op0=1 -> (n2S1op0'=n2S1op1)&(n2S1ov3dst0'=n2S1ov3dst1)&(n2S1os'=n2S1os-1)&(n2S1pc'=-6);
[] numSteps<maxNumSteps & n2S1pc=-6 -> (n2S1pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S1pc=0 & n2S1is>0 -> (n2S1pc'=1)&(unlk'=false);
[] n2S1pc=1 & (n2S1ip0=1) -> (n2S1pc'=2);
[] n2S1pc=1 & !((n2S1ip0=1)) -> (n2S1pc'=4);
[] n2S1pc=2 -> (n2S1opt'=3)&(n2S1pc'=-4)&(n2S1ra'=3);
[] n2S1pc=3 -> (n2S1pc'=19);
[] n2S1pc=4 & (n2S1ip0=2) -> (n2S1pc'=5);
[] n2S1pc=4 & !((n2S1ip0=2)) -> (n2S1pc'=10);
[] n2S1pc=5 & (n2S1iv3dst0=1) -> (n2S1pc'=6);
[] n2S1pc=5 & !((n2S1iv3dst0=1)) -> (n2S1pc'=8);
[] n2S1pc=6 -> (n2S1opt'=3)&(n2S1pc'=-4)&(n2S1ra'=7);
[] n2S1pc=7 -> (n2S1pc'=9);
[] n2S1pc=8 -> (n2S1opt'=1)&(n2S1pc'=-4)&(n2S1ra'=9);
[] n2S1pc=9 -> (n2S1pc'=19);
[] n2S1pc=10 & (n2S1ip0=3) -> (n2S1pc'=11);
[] n2S1pc=10 & !((n2S1ip0=3)) -> (n2S1pc'=19);
[] n2S1pc=11 & v7COST_01>=INTMIN & v7COST_01<=INTMAX -> (n2S1v6route1'=v7COST_01)&(n2S1pc'=12);
[] n2S1pc=12 & (v7COST_02+v7COST_21)>=INTMIN & (v7COST_02+v7COST_21)<=INTMAX -> (n2S1v6route2'=(v7COST_02+v7COST_21))&(n2S1pc'=13);
[] n2S1pc=13 -> 0.5:(n2S1t0'=0)&(n2S1pc'=14) + 0.5:(n2S1t0'=1)&(n2S1pc'=14);
[] n2S1pc=14 & ((n2S1v6route1<n2S1v6route2)|((n2S1v6route1=n2S1v6route2)&(n2S1t0=1))) -> (n2S1pc'=15);
[] n2S1pc=14 & !(((n2S1v6route1<n2S1v6route2)|((n2S1v6route1=n2S1v6route2)&(n2S1t0=1)))) -> (n2S1pc'=17);
[] n2S1pc=15 -> (n2S1opt'=1)&(n2S1pc'=-4)&(n2S1ra'=16);
[] n2S1pc=16 -> (n2S1pc'=18);
[] n2S1pc=17 -> (n2S1opt'=2)&(n2S1pc'=-4)&(n2S1ra'=18);
[] n2S1pc=18 -> (n2S1pc'=19);
[] numSteps<maxNumSteps & n2S1pc=19 -> (n2S1pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2S0
n2S0v6route1:[INTMIN..INTMAX] init 0;
n2S0v6route2:[INTMIN..INTMAX] init 0;
n2S0t0:[0..1];
n2S0ip0:[1..3] init 1;n2S0iv3dst0:[INTMIN..INTMAX] init 0;
n2S0ip1:[1..3] init 1;n2S0iv3dst1:[INTMIN..INTMAX] init 0;
n2S0is:[0..2] init 0;
n2S0op0:[1..3] init 1;n2S0ov3dst0:[INTMIN..INTMAX] init 0;
n2S0op1:[1..3] init 1;n2S0ov3dst1:[INTMIN..INTMAX] init 0;
n2S0os:[0..2] init 0;
n2S0opt:[1..3] init 1;
n2S0pc:[-6..19] init 0; n2S0ra:[-6..19] init 0;
[] n2S0is<2 & n2S0pc=-1 -> (n2S0ip0'=1)&(n2S0iv3dst0'=0)&(n2S0ip1'=n2S0ip0)&(n2S0iv3dst1'=n2S0iv3dst0)&(n2S0is'=n2S0is+1)&(n2S0pc'=n2S0ra);
[] n2S0is=2 & n2S0pc=-1 -> (n2S0pc'=n2S0ra);
[] n2S0is=0 & n2S0pc=-2 -> (n2S0pc'=n2S0ra);
[] n2S0is>0 & n2S0is<2 & n2S0pc=-2 -> (n2S0ip1'=n2S0ip0)&(n2S0iv3dst1'=n2S0iv3dst0)&(n2S0is'=n2S0is+1)&(n2S0pc'=n2S0ra);
[] n2S0is=2 & n2S0pc=-2 -> (n2S0pc'=n2S0ra);
[] n2S0is=0 & n2S0pc=-3 -> (n2S0pc'=n2S0ra);
[] n2S0is>0 & n2S0pc=-3 -> (n2S0ip0'=n2S0ip1)&(n2S0iv3dst0'=n2S0iv3dst1)&(n2S0is'=n2S0is-1)&(n2S0pc'=n2S0ra);
[] n2S0os=0 & n2S0pc=-4 -> (n2S0op0'=n2S0opt)&(n2S0ov3dst0'=n2S0iv3dst0)&(n2S0os'=1)&(n2S0pc'=-3);
[] n2S0os=1 & n2S0pc=-4 -> (n2S0op1'=n2S0opt)&(n2S0ov3dst1'=n2S0iv3dst0)&(n2S0os'=2)&(n2S0pc'=-3);
[] n2S0os=2 & n2S0pc=-4 -> (n2S0pc'=-3);
[n2H0f1] n2S0is=0 -> (n2S0ip0'=3)&(n2S0iv3dst0'=n2H0ov3dst0)&(n2S0is'=1);
[n2H0f1] n2S0is=1 -> (n2S0ip1'=3)&(n2S0iv3dst1'=n2H0ov3dst0)&(n2S0is'=2);
[n2H0f1] n2S0is=2 -> true;
[n2S2f1] n2S0is=0 -> (n2S0ip0'=2)&(n2S0iv3dst0'=n2S2ov3dst0)&(n2S0is'=1);
[n2S2f1] n2S0is=1 -> (n2S0ip1'=2)&(n2S0iv3dst1'=n2S2ov3dst0)&(n2S0is'=2);
[n2S2f1] n2S0is=2 -> true;
[n2S1f1] n2S0is=0 -> (n2S0ip0'=1)&(n2S0iv3dst0'=n2S1ov3dst0)&(n2S0is'=1);
[n2S1f1] n2S0is=1 -> (n2S0ip1'=1)&(n2S0iv3dst1'=n2S1ov3dst0)&(n2S0is'=2);
[n2S1f1] n2S0is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2S0pc=0 & n2S0os>0 -> (n2S0pc'=-5)&(unlk'=false);
[n2S0f3] n2S0pc=-5 & n2S0os>0 & n2S0op0=3 -> (n2S0op0'=n2S0op1)&(n2S0ov3dst0'=n2S0ov3dst1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f2] n2S0pc=-5 & n2S0os>0 & n2S0op0=2 -> (n2S0op0'=n2S0op1)&(n2S0ov3dst0'=n2S0ov3dst1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[n2S0f1] n2S0pc=-5 & n2S0os>0 & n2S0op0=1 -> (n2S0op0'=n2S0op1)&(n2S0ov3dst0'=n2S0ov3dst1)&(n2S0os'=n2S0os-1)&(n2S0pc'=-6);
[] numSteps<maxNumSteps & n2S0pc=-6 -> (n2S0pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2S0pc=0 & n2S0is>0 -> (n2S0pc'=1)&(unlk'=false);
[] n2S0pc=1 & (n2S0ip0=1) -> (n2S0pc'=2);
[] n2S0pc=1 & !((n2S0ip0=1)) -> (n2S0pc'=4);
[] n2S0pc=2 -> (n2S0opt'=3)&(n2S0pc'=-4)&(n2S0ra'=3);
[] n2S0pc=3 -> (n2S0pc'=19);
[] n2S0pc=4 & (n2S0ip0=2) -> (n2S0pc'=5);
[] n2S0pc=4 & !((n2S0ip0=2)) -> (n2S0pc'=10);
[] n2S0pc=5 & (n2S0iv3dst0=0) -> (n2S0pc'=6);
[] n2S0pc=5 & !((n2S0iv3dst0=0)) -> (n2S0pc'=8);
[] n2S0pc=6 -> (n2S0opt'=3)&(n2S0pc'=-4)&(n2S0ra'=7);
[] n2S0pc=7 -> (n2S0pc'=9);
[] n2S0pc=8 -> (n2S0opt'=1)&(n2S0pc'=-4)&(n2S0ra'=9);
[] n2S0pc=9 -> (n2S0pc'=19);
[] n2S0pc=10 & (n2S0ip0=3) -> (n2S0pc'=11);
[] n2S0pc=10 & !((n2S0ip0=3)) -> (n2S0pc'=19);
[] n2S0pc=11 & v7COST_01>=INTMIN & v7COST_01<=INTMAX -> (n2S0v6route1'=v7COST_01)&(n2S0pc'=12);
[] n2S0pc=12 & (v7COST_02+v7COST_21)>=INTMIN & (v7COST_02+v7COST_21)<=INTMAX -> (n2S0v6route2'=(v7COST_02+v7COST_21))&(n2S0pc'=13);
[] n2S0pc=13 -> 0.5:(n2S0t0'=0)&(n2S0pc'=14) + 0.5:(n2S0t0'=1)&(n2S0pc'=14);
[] n2S0pc=14 & ((n2S0v6route1<n2S0v6route2)|((n2S0v6route1=n2S0v6route2)&(n2S0t0=1))) -> (n2S0pc'=15);
[] n2S0pc=14 & !(((n2S0v6route1<n2S0v6route2)|((n2S0v6route1=n2S0v6route2)&(n2S0t0=1)))) -> (n2S0pc'=17);
[] n2S0pc=15 -> (n2S0opt'=1)&(n2S0pc'=-4)&(n2S0ra'=16);
[] n2S0pc=16 -> (n2S0pc'=18);
[] n2S0pc=17 -> (n2S0opt'=2)&(n2S0pc'=-4)&(n2S0ra'=18);
[] n2S0pc=18 -> (n2S0pc'=19);
[] numSteps<maxNumSteps & n2S0pc=19 -> (n2S0pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module n2H1
n2H1v9pkt_count:[INTMIN..INTMAX] init 0;
n2H1ip0:[1..2] init 1;n2H1iv3dst0:[INTMIN..INTMAX] init 0;
n2H1ip1:[1..2] init 1;n2H1iv3dst1:[INTMIN..INTMAX] init 0;
n2H1is:[0..2] init 0;
n2H1op0:[1..2] init 1;n2H1ov3dst0:[INTMIN..INTMAX] init 0;
n2H1op1:[1..2] init 1;n2H1ov3dst1:[INTMIN..INTMAX] init 0;
n2H1os:[0..2] init 0;
n2H1opt:[1..2] init 1;
n2H1pc:[-6..3] init 0; n2H1ra:[-6..3] init 0;
[] n2H1is<2 & n2H1pc=-1 -> (n2H1ip0'=1)&(n2H1iv3dst0'=0)&(n2H1ip1'=n2H1ip0)&(n2H1iv3dst1'=n2H1iv3dst0)&(n2H1is'=n2H1is+1)&(n2H1pc'=n2H1ra);
[] n2H1is=2 & n2H1pc=-1 -> (n2H1pc'=n2H1ra);
[] n2H1is=0 & n2H1pc=-2 -> (n2H1pc'=n2H1ra);
[] n2H1is>0 & n2H1is<2 & n2H1pc=-2 -> (n2H1ip1'=n2H1ip0)&(n2H1iv3dst1'=n2H1iv3dst0)&(n2H1is'=n2H1is+1)&(n2H1pc'=n2H1ra);
[] n2H1is=2 & n2H1pc=-2 -> (n2H1pc'=n2H1ra);
[] n2H1is=0 & n2H1pc=-3 -> (n2H1pc'=n2H1ra);
[] n2H1is>0 & n2H1pc=-3 -> (n2H1ip0'=n2H1ip1)&(n2H1iv3dst0'=n2H1iv3dst1)&(n2H1is'=n2H1is-1)&(n2H1pc'=n2H1ra);
[] n2H1os=0 & n2H1pc=-4 -> (n2H1op0'=n2H1opt)&(n2H1ov3dst0'=n2H1iv3dst0)&(n2H1os'=1)&(n2H1pc'=-3);
[] n2H1os=1 & n2H1pc=-4 -> (n2H1op1'=n2H1opt)&(n2H1ov3dst1'=n2H1iv3dst0)&(n2H1os'=2)&(n2H1pc'=-3);
[] n2H1os=2 & n2H1pc=-4 -> (n2H1pc'=-3);
[n2S1f3] n2H1is=0 -> (n2H1ip0'=1)&(n2H1iv3dst0'=n2S1ov3dst0)&(n2H1is'=1);
[n2S1f3] n2H1is=1 -> (n2H1ip1'=1)&(n2H1iv3dst1'=n2S1ov3dst0)&(n2H1is'=2);
[n2S1f3] n2H1is=2 -> true;
[] unlk & numSteps<maxNumSteps & n2H1pc=0 & n2H1os>0 -> (n2H1pc'=-5)&(unlk'=false);
[n2H1f1] n2H1pc=-5 & n2H1os>0 & n2H1op0=1 -> (n2H1op0'=n2H1op1)&(n2H1ov3dst0'=n2H1ov3dst1)&(n2H1os'=n2H1os-1)&(n2H1pc'=-6);
[] numSteps<maxNumSteps & n2H1pc=-6 -> (n2H1pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
[] unlk & numSteps<maxNumSteps & n2H1pc=0 & n2H1is>0 -> (n2H1pc'=1)&(unlk'=false);
[] n2H1pc=1 & (n2H1v9pkt_count+1)>=INTMIN & (n2H1v9pkt_count+1)<=INTMAX -> (n2H1v9pkt_count'=(n2H1v9pkt_count+1))&(n2H1pc'=2);
[] n2H1pc=2 -> (n2H1pc'=-3)&(n2H1ra'=3);
[] numSteps<maxNumSteps & n2H1pc=3 -> (n2H1pc'=0)&(unlk'=true)&(numSteps'=numSteps+1);
endmodule
module finisher
finished:bool init false;
[] !finished & assrtOK & unlk & n2H0is=0 & n2H0os=0 & n2H1is=0 & n2H1os=0 & n2S0is=0 & n2S0os=0 & n2S1is=0 & n2S1os=0 & n2S2is=0 & n2S2os=0 -> (finished'=true);
endmodule

//Properties

//  P=? [ F finished & assrtOK & obsrvOK & (n2H1v9pkt_count<v11NUM_PACKETS) ] / P=? [ F finished & obsrvOK ]
